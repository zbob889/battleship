(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>m});var r=t(537),o=t.n(r),a=t(645),l=t.n(a),i=t(667),c=t.n(i),p=new URL(t(473),t.b),s=new URL(t(378),t.b),A=l()(o()),d=c()(p),u=c()(s);A.push([e.id,"* {\n    margin: 0;\n    padding: 0;\n}\n\n@font-face {\n    font-family: 'Wargate';\n    src: url("+d+");\n}\n\n:root {\n    --ship-color: #bbb8d0;\n}\n\n#container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    height: 100vh;\n    width: 100vw;\n    background-image: url(https://wallpaperaccess.com/full/1486722.jpg);\n    background-size: cover;\n}\n\n#popup {\n    background-color: #ffffff;\n    width: 500px;\n    height: 700px;\n    padding: 30px 40px;\n    position: absolute;\n    transform: translate(-50%,-50%);\n    left: 50%;\n    top: 50%;\n    border-radius: 8px;\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    gap: 16px;\n    font-family: \"Wargate\";\n    font-size: 20px;\n    text-align: center;\n    background-color: lightblue;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n}\n\n#gameOver {\n    background-color: #ffffff;\n    width: 500px;\n    height: 300px;\n    padding: 30px 40px;\n    position: absolute;\n    transform: translate(-50%,-50%);\n    left: 50%;\n    top: 50%;\n    border-radius: 8px;\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 16px;\n    font-family: \"Wargate\";\n    font-size: 70px;\n    text-align: center;\n    background-color: lightblue;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n}\n\n#rotateButton {\n    height: 50px;\n    width: 100px;\n    outline: none;\n    border-radius: 10px;\n    border: none;\n    background-color: black;\n    color: white;\n    font-size: 20px;\n}\n\n#rotateButton:hover {\n    transform: scale(1.03);\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n}\n\n#placementBoard {\n    display: grid;\n    grid-template: repeat(11, 1fr) / repeat(11, 1fr);\n    flex: 1;\n    width: 95%;\n    background-color: teal;\n}\n\n.placementCell {\n    outline: none;\n    border: 1px solid black;\n}\n\n.shipCell {\n    outline: none;\n    border: none;\n    background-color: lightblue;\n}\n\n.takenCell {\n    outline: none;\n    border: none;\n    background-color: var(--ship-color);\n}\n\n.playerShipCell {\n    outline: none;\n    border: 1px solid black;\n    background-color: var(--ship-color);\n}\n\n#title {\n    font-family: 'Wargate';\n    font-size: 90px;\n}\n\n#boards {\n    display: flex;\n    gap: 50px;\n    justify-content: center;\n    align-items: center;\n}\n\n.board {\n    display: grid;\n    grid-template: repeat(11, 1fr) / repeat(11, 1fr);\n    height: 500px;\n    width: 500px;\n    background-image: url(https://besthqwallpapers.com/Uploads/8-12-2021/187140/blue-water-texture-ocean-top-view-water-top-view-blue-wave-background-ocean-waves-background.jpg);\n    background-size: cover;\n}\n\n.player {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n}\n\n.boardName {\n    font-family: 'Wargate';\n    font-size: 40px;\n}\n\n#computerBoard {\n\n}\n\n#playerBoard {\n\n}\n\n.computerCell, .playerCell, .textCell {\n    outline: none;\n    border: 1px solid black;\n}\n\n.textCell {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: 'Wargate';\n    font-size: 25px;\n    background-color: #0189a2;\n}\n\n.computerCell:hover{\n    transform: scale(1.03);\n    border: 1px solid red;\n}\n\n.cellHit{\n    outline: none;\n    border: 1px solid black;\n    background-color: red;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 36px;\n    text-align: justify;\n    font-family: 'Wargate';\n}\n\n.diag {\n    outline: none;\n    border: 1px solid black;\n    background: url("+u+");\n    background-repeat:no-repeat;\n    background-position:center center;\n    background-size: 100% 100%, auto;\n    background-color: red;\n}\n\n.cellMiss{\n    outline: none;\n    border: 1px solid black;\n    background-color: gray;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,sBAAsB;IACtB,4CAAwD;AAC5D;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,6BAA6B;IAC7B,mBAAmB;IACnB,aAAa;IACb,YAAY;IACZ,mEAAmE;IACnE,sBAAsB;AAC1B;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,kBAAkB;IAClB,+BAA+B;IAC/B,SAAS;IACT,QAAQ;IACR,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;IACT,sBAAsB;IACtB,eAAe;IACf,kBAAkB;IAClB,2BAA2B;IAC3B,uLAAuL;AAC3L;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,kBAAkB;IAClB,+BAA+B;IAC/B,SAAS;IACT,QAAQ;IACR,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,SAAS;IACT,sBAAsB;IACtB,eAAe;IACf,kBAAkB;IAClB,2BAA2B;IAC3B,uLAAuL;AAC3L;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,uBAAuB;IACvB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,sBAAsB;IACtB,2CAA2C;AAC/C;;AAEA;IACI,aAAa;IACb,gDAAgD;IAChD,OAAO;IACP,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,mCAAmC;AACvC;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mCAAmC;AACvC;;AAEA;IACI,sBAAsB;IACtB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,gDAAgD;IAChD,aAAa;IACb,YAAY;IACZ,6KAA6K;IAC7K,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,sBAAsB;IACtB,eAAe;AACnB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;IACI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;IACtB,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,qBAAqB;IACrB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,mBAAmB;IACnB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mDAA8P;IAC9P,2BAA2B;IAC3B,iCAAiC;IACjC,gCAAgC;IAChC,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,sBAAsB;AAC1B",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n}\n\n@font-face {\n    font-family: 'Wargate';\n    src: url(/Users/zack/repos/battleship/fonts/Wargate.otf);\n}\n\n:root {\n    --ship-color: #bbb8d0;\n}\n\n#container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    height: 100vh;\n    width: 100vw;\n    background-image: url(https://wallpaperaccess.com/full/1486722.jpg);\n    background-size: cover;\n}\n\n#popup {\n    background-color: #ffffff;\n    width: 500px;\n    height: 700px;\n    padding: 30px 40px;\n    position: absolute;\n    transform: translate(-50%,-50%);\n    left: 50%;\n    top: 50%;\n    border-radius: 8px;\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    gap: 16px;\n    font-family: \"Wargate\";\n    font-size: 20px;\n    text-align: center;\n    background-color: lightblue;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n}\n\n#gameOver {\n    background-color: #ffffff;\n    width: 500px;\n    height: 300px;\n    padding: 30px 40px;\n    position: absolute;\n    transform: translate(-50%,-50%);\n    left: 50%;\n    top: 50%;\n    border-radius: 8px;\n    display: none;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 16px;\n    font-family: \"Wargate\";\n    font-size: 70px;\n    text-align: center;\n    background-color: lightblue;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n}\n\n#rotateButton {\n    height: 50px;\n    width: 100px;\n    outline: none;\n    border-radius: 10px;\n    border: none;\n    background-color: black;\n    color: white;\n    font-size: 20px;\n}\n\n#rotateButton:hover {\n    transform: scale(1.03);\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n}\n\n#placementBoard {\n    display: grid;\n    grid-template: repeat(11, 1fr) / repeat(11, 1fr);\n    flex: 1;\n    width: 95%;\n    background-color: teal;\n}\n\n.placementCell {\n    outline: none;\n    border: 1px solid black;\n}\n\n.shipCell {\n    outline: none;\n    border: none;\n    background-color: lightblue;\n}\n\n.takenCell {\n    outline: none;\n    border: none;\n    background-color: var(--ship-color);\n}\n\n.playerShipCell {\n    outline: none;\n    border: 1px solid black;\n    background-color: var(--ship-color);\n}\n\n#title {\n    font-family: 'Wargate';\n    font-size: 90px;\n}\n\n#boards {\n    display: flex;\n    gap: 50px;\n    justify-content: center;\n    align-items: center;\n}\n\n.board {\n    display: grid;\n    grid-template: repeat(11, 1fr) / repeat(11, 1fr);\n    height: 500px;\n    width: 500px;\n    background-image: url(https://besthqwallpapers.com/Uploads/8-12-2021/187140/blue-water-texture-ocean-top-view-water-top-view-blue-wave-background-ocean-waves-background.jpg);\n    background-size: cover;\n}\n\n.player {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n}\n\n.boardName {\n    font-family: 'Wargate';\n    font-size: 40px;\n}\n\n#computerBoard {\n\n}\n\n#playerBoard {\n\n}\n\n.computerCell, .playerCell, .textCell {\n    outline: none;\n    border: 1px solid black;\n}\n\n.textCell {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: 'Wargate';\n    font-size: 25px;\n    background-color: #0189a2;\n}\n\n.computerCell:hover{\n    transform: scale(1.03);\n    border: 1px solid red;\n}\n\n.cellHit{\n    outline: none;\n    border: 1px solid black;\n    background-color: red;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 36px;\n    text-align: justify;\n    font-family: 'Wargate';\n}\n\n.diag {\n    outline: none;\n    border: 1px solid black;\n    background: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' preserveAspectRatio='none' viewBox='0 0 100 100'><path d='M1 0 L0 1 L99 100 L100 99' fill='black' /><path d='M0 99 L99 0 L100 1 L1 100' fill='black' /></svg>\");\n    background-repeat:no-repeat;\n    background-position:center center;\n    background-size: 100% 100%, auto;\n    background-color: red;\n}\n\n.cellMiss{\n    outline: none;\n    border: 1px solid black;\n    background-color: gray;\n}"],sourceRoot:""}]);const m=A},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(l[c]=!0)}for(var p=0;p<e.length;p++){var s=[].concat(e[p]);r&&l[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),n.push(s))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),l=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(l).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},l=[],i=0;i<e.length;i++){var c=e[i],p=r.base?c[0]+r.base:c[0],s=a[p]||0,A="".concat(p," ").concat(s);a[p]=s+1;var d=t(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==d)n[d].references++,n[d].updater(u);else{var m=o(u,r);r.byIndex=i,n.splice(i,0,{identifier:A,updater:m,references:1})}l.push(A)}return l}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var l=0;l<a.length;l++){var i=t(a[l]);n[i].references--}for(var c=r(e,o),p=0;p<a.length;p++){var s=t(a[p]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},378:e=>{e.exports="data:image/svg+xml;utf8,<svg xmlns=%27http://www.w3.org/2000/svg%27 version=%271.1%27 preserveAspectRatio=%27none%27 viewBox=%270 0 100 100%27><path d=%27M1 0 L0 1 L99 100 L100 99%27 fill=%27black%27 /><path d=%27M0 99 L99 0 L100 1 L1 100%27 fill=%27black%27 /></svg>"},473:(e,n,t)=>{e.exports=t.p+"190cbce636f3647630f2.otf"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),l=t.n(a),i=t(565),c=t.n(i),p=t(216),s=t.n(p),A=t(589),d=t.n(A),u=t(426),m={};function C(e,n,t,r){let o=document.createElement(`${e}`);o.className=`${n}`,o.setAttribute("id",`${t}`),document.getElementById(`${r}`).appendChild(o)}function f(e,n){document.getElementById(`${e}`).innerHTML=`${n}`}m.styleTagTransform=d(),m.setAttributes=c(),m.insert=l().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=s(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const g=(()=>{const e=document.getElementById("gameOver");return{player:(()=>{let n=!1;return{ships:[],misses:[],hits:[],lost:n,checkForLoss:function(){let t=this.ships.filter((e=>0==e.sunk));0==t.length?(e.style.display="flex",f("gameOverText","Player has lost the game!"),n=!0):0!==t.length&&(n=!1)}}})(),computer:(()=>{let n=!1;return{ships:[],misses:[],hits:[],lost:n,checkForLoss:function(){let t=this.ships.filter((e=>1==e.sunk));console.log(t),5==t.length?(e.style.display="flex",f("gameOverText","Player has won the game!"),n=!0):5!==t.length&&(n=!1)}}})()}})(),h=(e,n)=>({name:e,length:n,boardLocation:void 0,sunk:!1,hitNumber:0,hit:function(){this.hitNumber++},isSunk:function(){this.hitNumber==this.length?(this.sunk=!0,console.log("Ship sunk")):0!=n&&(this.sunk=!1)},sunkCells:function(){if(1==this.sunk){const e=this.boardLocation;for(let n=0;n<e.length+1;n++)document.getElementById(`${e[n]}`).className="diag"}}}),B=(()=>{const e=(e,n,t)=>{const r=h(`${e}`,n);return r.boardLocation=t,r};return{createShipAtLocation:e,createPlayerShip:(e,n,t)=>{const r=h(`${e}`,n);r.boardLocation=t,g.player.ships.push(r)},place:(n,t,r,o,a,l)=>{if(r==o){let o=l+1-a;const i=[];if("player"==`${t}`){for(let e=a-1;e<l;e++)i.push(r+`${e+1}Player`);return g.player.ships.push(e(n,o,i)),g.player.ships}if("computer"==`${t}`){for(let e=a-1;e<l;e++)i.push(r+`${e+1}Computer`);g.computer.ships.push(e(n,o,i))}}else if(a==l){let l=r.charCodeAt(0)-97,i=o.charCodeAt(0)-97,c=i+1-l;const p=[];if("player"==`${t}`){for(let e=l;e<i+1;e++){let n=String.fromCharCode(e+97);p.push(`${n}`+a+"Player")}g.player.ships.push(e(n,c,p))}else if("computer"==`${t}`){for(let e=l;e<i+1;e++){let n=String.fromCharCode(e+97);p.push(`${n}`+a+"Computer")}g.computer.ships.push(e(n,c,p))}}},receiveAttack:e=>{if(1==e.includes("Player")){let n=g.player.ships.find((n=>n.boardLocation.includes(`${e}`)));void 0!==n?(n.hit(),n.isSunk(),g.player.checkForLoss(),g.computer.hits.push(`${e}`),document.getElementById(`${e}`).className="cellHit"):null==n&&(g.computer.misses.push(`${e}`),document.getElementById(`${e}`).className="cellMiss")}else if(1==e.includes("Computer")){let n=g.computer.ships.find((n=>n.boardLocation.includes(`${e}`)));void 0!==n?(n.hit(),n.isSunk(),g.computer.checkForLoss(),n.sunkCells(),g.computer.hits.push(`${e}`),document.getElementById(`${e}`).className="cellHit"):null==n&&(g.computer.misses.push(`${e}`),document.getElementById(`${e}`).className="cellMiss")}}}})(),b=(()=>{let e,n=g.player.misses,t=g.player.hits,r=n.concat(t);return{attackPlayer:function n(){!function(){let n=String.fromCharCode(Math.floor(10*Math.random())+97),t=Math.floor(10*Math.random())+1;e=n+t+"Player"}();let t=r.find((n=>n==e));void 0!==t?n():null==t&&B.receiveAttack(e)}}})(),x=e=>{let n="horizontal";document.getElementById("rotateButton").addEventListener("click",(()=>{"horizontal"==n?n="vertical":"vertical"==n&&(n="horizontal")}));const t=document.getElementById("placementBoard");function r(t){if("placementCell"==t.target.className){let r=t.target.id,o=r.charAt(0),a=Number(r.slice(1));if("vertical"==n){5==e&&a>=7&&(a=6),4==e&&a>=8&&(a=7),3==e&&a>=9&&(a=8),10==a&&2==e&&(a=9);for(let n=0;n<e;n++){let e=`${o+(a+n)}`;"takenCell"!==document.getElementById(`${e}`).className&&(document.getElementById(`${e}`).className="shipCell")}}else if("horizontal"==n){Number(o.charCodeAt(0)-96)>=7&&5==e&&(o="f"),Number(o.charCodeAt(0)-96)>=8&&4==e&&(o="g"),Number(o.charCodeAt(0)-96)>=9&&3==e&&(o="h"),10==Number(o.charCodeAt(0)-96)&&42==e&&(o="i");for(let n=0;n<e;n++){let e=`${String.fromCharCode(o.charCodeAt(0)+n)+a}`;"takenCell"!==document.getElementById(`${e}`).className&&(document.getElementById(`${e}`).className="shipCell")}}}}function o(t){if("shipCell"==t.target.className){let r=t.target.id,o=r.charAt(0),a=Number(r.slice(1));if("vertical"==n){5==e&&a>=7&&(a=6),4==e&&a>=8&&(a=7),3==e&&a>=9&&(a=8),10==a&&2==e&&(a=9);for(let n=0;n<e;n++){let e=`${o+(a+n)}`;"takenCell"!==document.getElementById(`${e}`).className&&(document.getElementById(`${e}`).className="placementCell")}}else if("horizontal"==n){Number(o.charCodeAt(0)-96)>=7&&5==e&&(o="f"),Number(o.charCodeAt(0)-96)>=8&&4==e&&(o="g"),Number(o.charCodeAt(0)-96)>=9&&3==e&&(o="h"),10==Number(o.charCodeAt(0)-96)&&42==e&&(o="i");for(let n=0;n<e;n++){let e=`${String.fromCharCode(o.charCodeAt(0)+n)+a}`;"takenCell"!==document.getElementById(`${e}`).className&&(document.getElementById(`${e}`).className="placementCell")}}}}return t.addEventListener("mouseover",r),t.addEventListener("mouseout",o),t.addEventListener("click",(()=>{t.removeEventListener("mouseover",r),t.removeEventListener("mouseout",o)})),{changeToPlacement:o,changeToShip:r}};!function(){for(let e=0;e<121;e++)if(e<1)C("p","textCell","","playerBoard"),C("p","textCell","","computerBoard");else if(e<11){let n=String.fromCharCode(e+96),t=n.toUpperCase();C("p","textCell",`${n+1}`,"playerBoard"),f(`${n+1}`,`${t}`),C("p","textCell",`${n+2}`,"computerBoard"),f(`${n+2}`,`${t}`)}else if(e>10)if(e%11==0){let n=e/11;C("p","textCell",n+"player","playerBoard"),f(n+"player",`${n}`),C("p","textCell",n+"computer","computerBoard"),f(n+"computer",`${n}`)}else if(e%11!=0)if(e<22){let n=String.fromCharCode(e+85);C("div","playerCell",n+1+"Player","playerBoard"),C("div","computerCell",n+1+"Computer","computerBoard")}else if(e<33){let n=String.fromCharCode(e+74);C("div","playerCell",n+2+"Player","playerBoard"),C("div","computerCell",n+2+"Computer","computerBoard")}else if(e<44){let n=String.fromCharCode(e+63);C("div","playerCell",n+3+"Player","playerBoard"),C("div","computerCell",n+3+"Computer","computerBoard")}else if(e<55){let n=String.fromCharCode(e+52);C("div","playerCell",n+4+"Player","playerBoard"),C("div","computerCell",n+4+"Computer","computerBoard")}else if(e<66){let n=String.fromCharCode(e+41);C("div","playerCell",n+5+"Player","playerBoard"),C("div","computerCell",n+5+"Computer","computerBoard")}else if(e<77){let n=String.fromCharCode(e+30);C("div","playerCell",n+6+"Player","playerBoard"),C("div","computerCell",n+6+"Computer","computerBoard")}else if(e<88){let n=String.fromCharCode(e+19);C("div","playerCell",n+7+"Player","playerBoard"),C("div","computerCell",n+7+"Computer","computerBoard")}else if(e<99){let n=String.fromCharCode(e+8);C("div","playerCell",n+8+"Player","playerBoard"),C("div","computerCell",n+8+"Computer","computerBoard")}else if(e<110){let n=String.fromCharCode(e-3);C("div","playerCell",n+9+"Player","playerBoard"),C("div","computerCell",n+9+"Computer","computerBoard")}else if(e<121){let n=String.fromCharCode(e-14);C("div","playerCell",n+10+"Player","playerBoard"),C("div","computerCell",n+10+"Computer","computerBoard")}}(),document.getElementById("computerBoard").addEventListener("click",(e=>{if("computerCell"==e.target.className){let n=e.target.id;B.receiveAttack(n),0==g.computer.lost&&b.attackPlayer()}})),document.getElementById("popup").style.display="flex",function(){for(let e=0;e<121;e++)if(e<1)C("p","textCell","","placementBoard");else if(e<11){let n=String.fromCharCode(e+96),t=n.toUpperCase();C("p","textCell",`${n}`,"placementBoard"),f(`${n}`,`${t}`)}else if(e>10)if(e%11==0){let n=e/11;C("p","textCell",n+"placement","placementBoard"),f(n+"placement",`${n}`)}else e%11!=0&&(e<22?C("div","placementCell",`${String.fromCharCode(e+85)+1}`,"placementBoard"):e<33?C("div","placementCell",`${String.fromCharCode(e+74)+2}`,"placementBoard"):e<44?C("div","placementCell",`${String.fromCharCode(e+63)+3}`,"placementBoard"):e<55?C("div","placementCell",`${String.fromCharCode(e+52)+4}`,"placementBoard"):e<66?C("div","placementCell",`${String.fromCharCode(e+41)+5}`,"placementBoard"):e<77?C("div","placementCell",`${String.fromCharCode(e+30)+6}`,"placementBoard"):e<88?C("div","placementCell",`${String.fromCharCode(e+19)+7}`,"placementBoard"):e<99?C("div","placementCell",`${String.fromCharCode(e+8)+8}`,"placementBoard"):e<110?C("div","placementCell",`${String.fromCharCode(e-3)+9}`,"placementBoard"):e<121&&C("div","placementCell",`${String.fromCharCode(e-14)+10}`,"placementBoard"))}(),document.getElementById("placementBoard"),function(){let e=1;const n=document.getElementById("placementBoard");n.addEventListener("click",(function(){let n=[],t=document.querySelectorAll(".shipCell");t.forEach((e=>{n.push(e.id+"Player")})),1==e&&5!==t.length||2==e&&4!==t.length||3==e&&3!==t.length||4==e&&3!==t.length||5==e&&2!==t.length?t.forEach((e=>{e.className="placementCell"})):(1==e&&5==t.length?B.createPlayerShip("playerCarrier",5,n):2==e&&4==t.length?B.createPlayerShip("playerBattleship",4,n):3==e&&3==t.length?B.createPlayerShip("playerDestroyer",3,n):4==e&&3==t.length?B.createPlayerShip("playerSubmarine",3,n):5==e&&2==t.length&&(B.createPlayerShip("playerPatrolBoat",2,n),document.getElementById("popup").style.display="none",function(){let e=g.player.ships,n=[];e.forEach((e=>{for(let t=0;t<e.boardLocation.length;t++)n.push(e.boardLocation[t])})),n.forEach((e=>{document.getElementById(`${e}`).className="playerShipCell"}))}()),t.forEach((e=>{e.className="takenCell"})),e++)})),n.addEventListener("mouseover",(function(){1==e?x(5):2==e?(f("popupText","PLACE YOUR BATTLESHIP"),x(4)):3==e?(f("popupText","PLACE YOUR DESTROYER"),x(3)):4==e?(f("popupText","PLACE YOUR SUBMARINE"),x(3)):5==e&&(f("popupText","PLACE YOUR PATROL BOAT"),x(2))}))}(),B.place("computerCarrier","computer","a","a",1,5),B.place("computerBattleship","computer","b","e",1,1),B.place("computerDestroyer","computer","g","i",6,6),B.place("computerSubmarine","computer","g","i",7,7),B.place("computerPatrolBoat","computer","a","b",10,10)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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R1IsR0FDakM3RixTQUFTdUUsZUFBZSxTQUNoQzFFLE1BQU0wRixRQUFVLE9BeUJqQyxXQUNJLElBQUlSLEVBQVFKLEVBQVFFLE9BQU9FLE1BQ3ZCcUUsRUFBZ0IsR0FDcEJyRSxFQUFNb0UsU0FBUTdJLElBQ1YsSUFBSSxJQUFJekUsRUFBSSxFQUFHQSxFQUFJeUUsRUFBRXVGLGNBQWNsSyxPQUFRRSxJQUN2Q3VOLEVBQWN0TyxLQUFLd0YsRUFBRXVGLGNBQWNoSyxHQUN0QyxJQUVMdU4sRUFBY0QsU0FBUTdJLElBQ1BOLFNBQVN1RSxlQUFlLEdBQUdqRSxLQUNqQ2dFLFVBQVksZ0JBQWdCLEdBRXpDLENBcENRK0UsSUFFSkosRUFBVUUsU0FBUTdJLElBQ2RBLEVBQUVnRSxVQUFZLFdBQVcsSUFFN0IwRSxJQUNKLElBcENBWixFQUFlRCxpQkFBaUIsYUFxQ2hDLFdBQ2UsR0FBUmEsRUFDQ2YsRUFBZ0IsR0FDRixHQUFSZSxHQUNOeEUsRUFBUSxZQUFhLHlCQUNyQnlELEVBQWdCLElBQ0YsR0FBUmUsR0FDTnhFLEVBQVEsWUFBYSx3QkFDckJ5RCxFQUFnQixJQUNGLEdBQVJlLEdBQ054RSxFQUFRLFlBQWEsd0JBQ3JCeUQsRUFBZ0IsSUFDRixHQUFSZSxJQUNOeEUsRUFBUSxZQUFhLDBCQUNyQnlELEVBQWdCLEdBRXhCLEdBY0osQ0Y5RElxQixHR1hBbkQsRUFBVUcsTUFBTSxrQkFBbUIsV0FBWSxJQUFLLElBQUssRUFBRyxHQUM1REgsRUFBVUcsTUFBTSxxQkFBc0IsV0FBWSxJQUFLLElBQUssRUFBRyxHQUMvREgsRUFBVUcsTUFBTSxvQkFBcUIsV0FBWSxJQUFLLElBQUssRUFBRyxHQUM5REgsRUFBVUcsTUFBTSxvQkFBcUIsV0FBWSxJQUFLLElBQUssRUFBRyxHQUM5REgsRUFBVUcsTUFBTSxxQkFBc0IsV0FBWSxJQUFLLElBQUssR0FBSSxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9hZGRFbGVtZW50LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvYWRkVGV4dC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3BsYXllcnMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zaGlwLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvZ2FtZUJvYXJkLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvY29tcHV0ZXJUdXJuLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc2VsZWN0TmVpZ2hib3JzLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvY3JlYXRlQm9hcmQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3BsYXllclNldHVwLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvY3JlYXRlUGxhY2VtZW50Qm9hcmQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9wbGF5ZXJTaGlwQ3JlYXRpb24uanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9jb21wdXRlclNldHVwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIvVXNlcnMvemFjay9yZXBvcy9iYXR0bGVzaGlwL2ZvbnRzL1dhcmdhdGUub3RmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18gPSBuZXcgVVJMKFwiZGF0YTppbWFnZS9zdmcreG1sO3V0ZjgsPHN2ZyB4bWxucz0lMjdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyUyNyB2ZXJzaW9uPSUyNzEuMSUyNyBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSUyN25vbmUlMjcgdmlld0JveD0lMjcwIDAgMTAwIDEwMCUyNz48cGF0aCBkPSUyN00xIDAgTDAgMSBMOTkgMTAwIEwxMDAgOTklMjcgZmlsbD0lMjdibGFjayUyNyAvPjxwYXRoIGQ9JTI3TTAgOTkgTDk5IDAgTDEwMCAxIEwxIDEwMCUyNyBmaWxsPSUyN2JsYWNrJTI3IC8+PC9zdmc+XCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIioge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1dhcmdhdGUnO1xcbiAgICBzcmM6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gKyBcIik7XFxufVxcblxcbjpyb290IHtcXG4gICAgLS1zaGlwLWNvbG9yOiAjYmJiOGQwO1xcbn1cXG5cXG4jY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGhlaWdodDogMTAwdmg7XFxuICAgIHdpZHRoOiAxMDB2dztcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vd2FsbHBhcGVyYWNjZXNzLmNvbS9mdWxsLzE0ODY3MjIuanBnKTtcXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG59XFxuXFxuI3BvcHVwIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcXG4gICAgd2lkdGg6IDUwMHB4O1xcbiAgICBoZWlnaHQ6IDcwMHB4O1xcbiAgICBwYWRkaW5nOiAzMHB4IDQwcHg7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcXG4gICAgbGVmdDogNTAlO1xcbiAgICB0b3A6IDUwJTtcXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xcbiAgICBkaXNwbGF5OiBub25lO1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDE2cHg7XFxuICAgIGZvbnQtZmFtaWx5OiBcXFwiV2FyZ2F0ZVxcXCI7XFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7XFxuICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4yNSkgMHB4IDU0cHggNTVweCwgcmdiYSgwLCAwLCAwLCAwLjEyKSAwcHggLTEycHggMzBweCwgcmdiYSgwLCAwLCAwLCAwLjEyKSAwcHggNHB4IDZweCwgcmdiYSgwLCAwLCAwLCAwLjE3KSAwcHggMTJweCAxM3B4LCByZ2JhKDAsIDAsIDAsIDAuMDkpIDBweCAtM3B4IDVweDtcXG59XFxuXFxuI2dhbWVPdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcXG4gICAgd2lkdGg6IDUwMHB4O1xcbiAgICBoZWlnaHQ6IDMwMHB4O1xcbiAgICBwYWRkaW5nOiAzMHB4IDQwcHg7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcXG4gICAgbGVmdDogNTAlO1xcbiAgICB0b3A6IDUwJTtcXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xcbiAgICBkaXNwbGF5OiBub25lO1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgZ2FwOiAxNnB4O1xcbiAgICBmb250LWZhbWlseTogXFxcIldhcmdhdGVcXFwiO1xcbiAgICBmb250LXNpemU6IDcwcHg7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlO1xcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMjUpIDBweCA1NHB4IDU1cHgsIHJnYmEoMCwgMCwgMCwgMC4xMikgMHB4IC0xMnB4IDMwcHgsIHJnYmEoMCwgMCwgMCwgMC4xMikgMHB4IDRweCA2cHgsIHJnYmEoMCwgMCwgMCwgMC4xNykgMHB4IDEycHggMTNweCwgcmdiYSgwLCAwLCAwLCAwLjA5KSAwcHggLTNweCA1cHg7XFxufVxcblxcbiNyb3RhdGVCdXR0b24ge1xcbiAgICBoZWlnaHQ6IDUwcHg7XFxuICAgIHdpZHRoOiAxMDBweDtcXG4gICAgb3V0bGluZTogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxufVxcblxcbiNyb3RhdGVCdXR0b246aG92ZXIge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDMpO1xcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMSkgMHB4IDRweCAxMnB4O1xcbn1cXG5cXG4jcGxhY2VtZW50Qm9hcmQge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlOiByZXBlYXQoMTEsIDFmcikgLyByZXBlYXQoMTEsIDFmcik7XFxuICAgIGZsZXg6IDE7XFxuICAgIHdpZHRoOiA5NSU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRlYWw7XFxufVxcblxcbi5wbGFjZW1lbnRDZWxsIHtcXG4gICAgb3V0bGluZTogbm9uZTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxufVxcblxcbi5zaGlwQ2VsbCB7XFxuICAgIG91dGxpbmU6IG5vbmU7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlO1xcbn1cXG5cXG4udGFrZW5DZWxsIHtcXG4gICAgb3V0bGluZTogbm9uZTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zaGlwLWNvbG9yKTtcXG59XFxuXFxuLnBsYXllclNoaXBDZWxsIHtcXG4gICAgb3V0bGluZTogbm9uZTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXNoaXAtY29sb3IpO1xcbn1cXG5cXG4jdGl0bGUge1xcbiAgICBmb250LWZhbWlseTogJ1dhcmdhdGUnO1xcbiAgICBmb250LXNpemU6IDkwcHg7XFxufVxcblxcbiNib2FyZHMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDUwcHg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4uYm9hcmQge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlOiByZXBlYXQoMTEsIDFmcikgLyByZXBlYXQoMTEsIDFmcik7XFxuICAgIGhlaWdodDogNTAwcHg7XFxuICAgIHdpZHRoOiA1MDBweDtcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vYmVzdGhxd2FsbHBhcGVycy5jb20vVXBsb2Fkcy84LTEyLTIwMjEvMTg3MTQwL2JsdWUtd2F0ZXItdGV4dHVyZS1vY2Vhbi10b3Atdmlldy13YXRlci10b3Atdmlldy1ibHVlLXdhdmUtYmFja2dyb3VuZC1vY2Vhbi13YXZlcy1iYWNrZ3JvdW5kLmpwZyk7XFxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XFxufVxcblxcbi5wbGF5ZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAyMHB4O1xcbn1cXG5cXG4uYm9hcmROYW1lIHtcXG4gICAgZm9udC1mYW1pbHk6ICdXYXJnYXRlJztcXG4gICAgZm9udC1zaXplOiA0MHB4O1xcbn1cXG5cXG4jY29tcHV0ZXJCb2FyZCB7XFxuXFxufVxcblxcbiNwbGF5ZXJCb2FyZCB7XFxuXFxufVxcblxcbi5jb21wdXRlckNlbGwsIC5wbGF5ZXJDZWxsLCAudGV4dENlbGwge1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG59XFxuXFxuLnRleHRDZWxsIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGZvbnQtZmFtaWx5OiAnV2FyZ2F0ZSc7XFxuICAgIGZvbnQtc2l6ZTogMjVweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAxODlhMjtcXG59XFxuXFxuLmNvbXB1dGVyQ2VsbDpob3ZlcntcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAzKTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xcbn1cXG5cXG4uY2VsbEhpdHtcXG4gICAgb3V0bGluZTogbm9uZTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGZvbnQtc2l6ZTogMzZweDtcXG4gICAgdGV4dC1hbGlnbjoganVzdGlmeTtcXG4gICAgZm9udC1mYW1pbHk6ICdXYXJnYXRlJztcXG59XFxuXFxuLmRpYWcge1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG4gICAgYmFja2dyb3VuZDogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyArIFwiKTtcXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlciBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJSAxMDAlLCBhdXRvO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxufVxcblxcbi5jZWxsTWlzc3tcXG4gICAgb3V0bGluZTogbm9uZTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxTQUFTO0lBQ1QsVUFBVTtBQUNkOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLDRDQUF3RDtBQUM1RDs7QUFFQTtJQUNJLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsNkJBQTZCO0lBQzdCLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2IsWUFBWTtJQUNaLG1FQUFtRTtJQUNuRSxzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLCtCQUErQjtJQUMvQixTQUFTO0lBQ1QsUUFBUTtJQUNSLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixTQUFTO0lBQ1Qsc0JBQXNCO0lBQ3RCLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsMkJBQTJCO0lBQzNCLHVMQUF1TDtBQUMzTDs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsK0JBQStCO0lBQy9CLFNBQVM7SUFDVCxRQUFRO0lBQ1Isa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixTQUFTO0lBQ1Qsc0JBQXNCO0lBQ3RCLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsMkJBQTJCO0lBQzNCLHVMQUF1TDtBQUMzTDs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixlQUFlO0FBQ25COztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLDJDQUEyQztBQUMvQzs7QUFFQTtJQUNJLGFBQWE7SUFDYixnREFBZ0Q7SUFDaEQsT0FBTztJQUNQLFVBQVU7SUFDVixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFlBQVk7SUFDWiwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsWUFBWTtJQUNaLG1DQUFtQztBQUN2Qzs7QUFFQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUNBQW1DO0FBQ3ZDOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsU0FBUztJQUNULHVCQUF1QjtJQUN2QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsZ0RBQWdEO0lBQ2hELGFBQWE7SUFDYixZQUFZO0lBQ1osNktBQTZLO0lBQzdLLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxzQkFBc0I7SUFDdEIsZUFBZTtBQUNuQjs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsZUFBZTtJQUNmLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0QixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLHFCQUFxQjtJQUNyQixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsbUJBQW1CO0lBQ25CLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbURBQThQO0lBQzlQLDJCQUEyQjtJQUMzQixpQ0FBaUM7SUFDakMsZ0NBQWdDO0lBQ2hDLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsc0JBQXNCO0FBQzFCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIioge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1dhcmdhdGUnO1xcbiAgICBzcmM6IHVybCgvVXNlcnMvemFjay9yZXBvcy9iYXR0bGVzaGlwL2ZvbnRzL1dhcmdhdGUub3RmKTtcXG59XFxuXFxuOnJvb3Qge1xcbiAgICAtLXNoaXAtY29sb3I6ICNiYmI4ZDA7XFxufVxcblxcbiNjb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgd2lkdGg6IDEwMHZ3O1xcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaHR0cHM6Ly93YWxscGFwZXJhY2Nlc3MuY29tL2Z1bGwvMTQ4NjcyMi5qcGcpO1xcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcbn1cXG5cXG4jcG9wdXAge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcbiAgICB3aWR0aDogNTAwcHg7XFxuICAgIGhlaWdodDogNzAwcHg7XFxuICAgIHBhZGRpbmc6IDMwcHggNDBweDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHRvcDogNTAlO1xcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMTZweDtcXG4gICAgZm9udC1mYW1pbHk6IFxcXCJXYXJnYXRlXFxcIjtcXG4gICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Ymx1ZTtcXG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjI1KSAwcHggNTRweCA1NXB4LCByZ2JhKDAsIDAsIDAsIDAuMTIpIDBweCAtMTJweCAzMHB4LCByZ2JhKDAsIDAsIDAsIDAuMTIpIDBweCA0cHggNnB4LCByZ2JhKDAsIDAsIDAsIDAuMTcpIDBweCAxMnB4IDEzcHgsIHJnYmEoMCwgMCwgMCwgMC4wOSkgMHB4IC0zcHggNXB4O1xcbn1cXG5cXG4jZ2FtZU92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcbiAgICB3aWR0aDogNTAwcHg7XFxuICAgIGhlaWdodDogMzAwcHg7XFxuICAgIHBhZGRpbmc6IDMwcHggNDBweDtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHRvcDogNTAlO1xcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBnYXA6IDE2cHg7XFxuICAgIGZvbnQtZmFtaWx5OiBcXFwiV2FyZ2F0ZVxcXCI7XFxuICAgIGZvbnQtc2l6ZTogNzBweDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7XFxuICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4yNSkgMHB4IDU0cHggNTVweCwgcmdiYSgwLCAwLCAwLCAwLjEyKSAwcHggLTEycHggMzBweCwgcmdiYSgwLCAwLCAwLCAwLjEyKSAwcHggNHB4IDZweCwgcmdiYSgwLCAwLCAwLCAwLjE3KSAwcHggMTJweCAxM3B4LCByZ2JhKDAsIDAsIDAsIDAuMDkpIDBweCAtM3B4IDVweDtcXG59XFxuXFxuI3JvdGF0ZUJ1dHRvbiB7XFxuICAgIGhlaWdodDogNTBweDtcXG4gICAgd2lkdGg6IDEwMHB4O1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXG59XFxuXFxuI3JvdGF0ZUJ1dHRvbjpob3ZlciB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMyk7XFxuICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4xKSAwcHggNHB4IDEycHg7XFxufVxcblxcbiNwbGFjZW1lbnRCb2FyZCB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGU6IHJlcGVhdCgxMSwgMWZyKSAvIHJlcGVhdCgxMSwgMWZyKTtcXG4gICAgZmxleDogMTtcXG4gICAgd2lkdGg6IDk1JTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdGVhbDtcXG59XFxuXFxuLnBsYWNlbWVudENlbGwge1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG59XFxuXFxuLnNoaXBDZWxsIHtcXG4gICAgb3V0bGluZTogbm9uZTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7XFxufVxcblxcbi50YWtlbkNlbGwge1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXNoaXAtY29sb3IpO1xcbn1cXG5cXG4ucGxheWVyU2hpcENlbGwge1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc2hpcC1jb2xvcik7XFxufVxcblxcbiN0aXRsZSB7XFxuICAgIGZvbnQtZmFtaWx5OiAnV2FyZ2F0ZSc7XFxuICAgIGZvbnQtc2l6ZTogOTBweDtcXG59XFxuXFxuI2JvYXJkcyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogNTBweDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5ib2FyZCB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGU6IHJlcGVhdCgxMSwgMWZyKSAvIHJlcGVhdCgxMSwgMWZyKTtcXG4gICAgaGVpZ2h0OiA1MDBweDtcXG4gICAgd2lkdGg6IDUwMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaHR0cHM6Ly9iZXN0aHF3YWxscGFwZXJzLmNvbS9VcGxvYWRzLzgtMTItMjAyMS8xODcxNDAvYmx1ZS13YXRlci10ZXh0dXJlLW9jZWFuLXRvcC12aWV3LXdhdGVyLXRvcC12aWV3LWJsdWUtd2F2ZS1iYWNrZ3JvdW5kLW9jZWFuLXdhdmVzLWJhY2tncm91bmQuanBnKTtcXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG59XFxuXFxuLnBsYXllciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDIwcHg7XFxufVxcblxcbi5ib2FyZE5hbWUge1xcbiAgICBmb250LWZhbWlseTogJ1dhcmdhdGUnO1xcbiAgICBmb250LXNpemU6IDQwcHg7XFxufVxcblxcbiNjb21wdXRlckJvYXJkIHtcXG5cXG59XFxuXFxuI3BsYXllckJvYXJkIHtcXG5cXG59XFxuXFxuLmNvbXB1dGVyQ2VsbCwgLnBsYXllckNlbGwsIC50ZXh0Q2VsbCB7XFxuICAgIG91dGxpbmU6IG5vbmU7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcbn1cXG5cXG4udGV4dENlbGwge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZm9udC1mYW1pbHk6ICdXYXJnYXRlJztcXG4gICAgZm9udC1zaXplOiAyNXB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDE4OWEyO1xcbn1cXG5cXG4uY29tcHV0ZXJDZWxsOmhvdmVye1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDMpO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XFxufVxcblxcbi5jZWxsSGl0e1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZm9udC1zaXplOiAzNnB4O1xcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xcbiAgICBmb250LWZhbWlseTogJ1dhcmdhdGUnO1xcbn1cXG5cXG4uZGlhZyB7XFxuICAgIG91dGxpbmU6IG5vbmU7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXFxcImRhdGE6aW1hZ2Uvc3ZnK3htbDt1dGY4LDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2ZXJzaW9uPScxLjEnIHByZXNlcnZlQXNwZWN0UmF0aW89J25vbmUnIHZpZXdCb3g9JzAgMCAxMDAgMTAwJz48cGF0aCBkPSdNMSAwIEwwIDEgTDk5IDEwMCBMMTAwIDk5JyBmaWxsPSdibGFjaycgLz48cGF0aCBkPSdNMCA5OSBMOTkgMCBMMTAwIDEgTDEgMTAwJyBmaWxsPSdibGFjaycgLz48L3N2Zz5cXFwiKTtcXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlciBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJSAxMDAlLCBhdXRvO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxufVxcblxcbi5jZWxsTWlzc3tcXG4gICAgb3V0bGluZTogbm9uZTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7IC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cblxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfSAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG5cblxuICBpZiAoL1tcIicoKSBcXHRcXG5dfCglMjApLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCBcIlxcXFxuXCIpLCBcIlxcXCJcIik7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQxNzk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFkZEVsZW1lbnQoZWxlbWVudFR5cGUsIGVsZW1lbnRDbGFzcywgZWxlbWVudElELCBhZGRUb0lEKSB7XG5cbiAgICBsZXQgbmV3RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoYCR7ZWxlbWVudFR5cGV9YCk7XG4gICAgbmV3RWxlbWVudC5jbGFzc05hbWUgPSBgJHtlbGVtZW50Q2xhc3N9YDtcbiAgICBuZXdFbGVtZW50LnNldEF0dHJpYnV0ZSgnaWQnLCBgJHtlbGVtZW50SUR9YCk7XG4gICAgbGV0IHBhcmVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGAke2FkZFRvSUR9YCk7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKG5ld0VsZW1lbnQpO1xuXG59OyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFkZFRleHQgKGFkZFRvSUQsIHRleHQpe1xuICAgIGxldCBwYXJlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHthZGRUb0lEfWApO1xuICAgIHBhcmVudC5pbm5lckhUTUwgPSAoYCR7dGV4dH1gKTtcbn07IiwiaW1wb3J0IHsgc2hpcEZhY3RvcnkgfSBmcm9tIFwiLi9zaGlwXCI7XG5pbXBvcnQgYWRkVGV4dCBmcm9tIFwiLi9hZGRUZXh0XCI7XG5cbmV4cG9ydCBjb25zdCBwbGF5ZXJzID0gKCgpID0+IHtcblxuICAgIGNvbnN0IGdhbWVPdmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dhbWVPdmVyJyk7XG5cbiAgICBjb25zdCBwbGF5ZXIgPSAoKCkgPT4ge1xuICAgICAgICBjb25zdCBzaGlwcyA9IFtdO1xuICAgICAgICBjb25zdCBtaXNzZXMgPSBbXTtcbiAgICAgICAgY29uc3QgaGl0cyA9IFtdO1xuICAgICAgICBsZXQgbG9zdCA9IGZhbHNlO1xuXG4gICAgICAgIGZ1bmN0aW9uIGNoZWNrRm9yTG9zcygpe1xuICAgICAgICAgICAgbGV0IGxvc3NDb25kaXRpb24gPSB0aGlzLnNoaXBzLmZpbHRlcihzaGlwID0+IHNoaXAuc3VuayA9PSBmYWxzZSk7XG4gICAgICAgICAgICBpZihsb3NzQ29uZGl0aW9uLmxlbmd0aCA9PSAwKXtcbiAgICAgICAgICAgICAgICBnYW1lT3Zlci5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnO1xuICAgICAgICAgICAgICAgIGFkZFRleHQoJ2dhbWVPdmVyVGV4dCcsIFwiUGxheWVyIGhhcyBsb3N0IHRoZSBnYW1lIVwiKVxuICAgICAgICAgICAgICAgIGxvc3QgPSB0cnVlO1xuICAgICAgICAgICAgfSBlbHNlIGlmKGxvc3NDb25kaXRpb24ubGVuZ3RoICE9PSAwKXtcbiAgICAgICAgICAgICAgICAvL25vIGxvc3NcbiAgICAgICAgICAgICAgICBsb3N0ID0gZmFsc2U7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzaGlwcyxcbiAgICAgICAgICAgIG1pc3NlcyxcbiAgICAgICAgICAgIGhpdHMsXG4gICAgICAgICAgICBsb3N0LFxuICAgICAgICAgICAgY2hlY2tGb3JMb3NzLFxuICAgICAgICB9O1xuICAgIH0pKCk7XG5cbiAgICBjb25zdCBjb21wdXRlciA9ICgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHNoaXBzID0gW107XG4gICAgICAgIGNvbnN0IG1pc3NlcyA9IFtdO1xuICAgICAgICBjb25zdCBoaXRzID0gW107XG4gICAgICAgIGxldCBsb3N0ID0gZmFsc2U7XG5cbiAgICAgICAgZnVuY3Rpb24gY2hlY2tGb3JMb3NzKCl7XG4gICAgICAgICAgICBsZXQgbG9zc0NvbmRpdGlvbiA9IHRoaXMuc2hpcHMuZmlsdGVyKHNoaXAgPT4gc2hpcC5zdW5rID09IHRydWUpO1xuICAgICAgICAgICAgY29uc29sZS5sb2cobG9zc0NvbmRpdGlvbik7XG4gICAgICAgICAgICBpZihsb3NzQ29uZGl0aW9uLmxlbmd0aCA9PSA1KXtcbiAgICAgICAgICAgICAgICAvL2xvc3NcbiAgICAgICAgICAgICAgICBnYW1lT3Zlci5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnO1xuICAgICAgICAgICAgICAgIGFkZFRleHQoJ2dhbWVPdmVyVGV4dCcsIFwiUGxheWVyIGhhcyB3b24gdGhlIGdhbWUhXCIpXG4gICAgICAgICAgICAgICAgbG9zdCA9IHRydWU7XG4gICAgICAgICAgICB9IGVsc2UgaWYobG9zc0NvbmRpdGlvbi5sZW5ndGggIT09IDUpe1xuICAgICAgICAgICAgICAgIC8vbm8gbG9zc1xuICAgICAgICAgICAgICAgIGxvc3QgPSBmYWxzZTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNoaXBzLFxuICAgICAgICAgICAgbWlzc2VzLFxuICAgICAgICAgICAgaGl0cyxcbiAgICAgICAgICAgIGxvc3QsXG4gICAgICAgICAgICBjaGVja0Zvckxvc3MsXG4gICAgICAgIH07XG4gICAgfSkoKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHBsYXllcixcbiAgICAgICAgY29tcHV0ZXIsXG4gICAgfVxufSkoKTtcblxuLy8gbW9kdWxlLmV4cG9ydHMucGxheWVycyA9IHBsYXllcnM7IiwiaW1wb3J0IGFkZFRleHQgZnJvbSBcIi4vYWRkVGV4dFwiO1xuaW1wb3J0IHsgcGxheWVycyB9IGZyb20gXCIuL3BsYXllcnNcIjtcblxuZXhwb3J0IGNvbnN0IHNoaXBGYWN0b3J5ID0gKG5hbWUsIGxlbmd0aCkgPT4ge1xuXG4gICAgbGV0IGhpdE51bWJlciA9IDA7XG4gICAgbGV0IHN1bmsgPSBmYWxzZTtcbiAgICBsZXQgYm9hcmRMb2NhdGlvbjtcblxuICAgIGZ1bmN0aW9uIGhpdCgpe1xuICAgICAgICB0aGlzLmhpdE51bWJlcisrO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBpc1N1bmsoKXtcbiAgICAgICAgaWYodGhpcy5oaXROdW1iZXIgPT0gdGhpcy5sZW5ndGgpe1xuICAgICAgICAgICAgdGhpcy5zdW5rID0gdHJ1ZTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTaGlwIHN1bmsnKTtcbiAgICAgICAgfSBlbHNlIGlmKGhpdE51bWJlciAhPSBsZW5ndGgpe1xuICAgICAgICAgICAgdGhpcy5zdW5rID0gZmFsc2U7XG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIHN1bmtDZWxscygpe1xuICAgICAgICBpZih0aGlzLnN1bmsgPT0gdHJ1ZSl7XG4gICAgICAgICAgICBjb25zdCBzaGlwQ2VsbHMgPSB0aGlzLmJvYXJkTG9jYXRpb247XG4gICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgc2hpcENlbGxzLmxlbmd0aCArIDE7IGkrKyl7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYCR7c2hpcENlbGxzW2ldfWApLmNsYXNzTmFtZSA9ICdkaWFnJztcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIHJldHVybiB7bmFtZSwgbGVuZ3RoLCBib2FyZExvY2F0aW9uLCBzdW5rLCBoaXROdW1iZXIsIGhpdCwgaXNTdW5rLCBzdW5rQ2VsbHN9O1xufTsiLCJpbXBvcnQgeyBzaGlwRmFjdG9yeSB9IGZyb20gXCIuL3NoaXBcIjtcbmltcG9ydCB7IHBsYXllcnMgfSBmcm9tICcuL3BsYXllcnMuanMnXG5cbi8vIGZ1bmN0aW9uIGNyZWF0ZVNoaXBBdExvY2F0aW9uKG5hbWUsIGxlbmd0aCwgbG9jYXRpb24pe1xuLy8gICAgIGNvbnN0IHNoaXAgPSBzaGlwRmFjdG9yeShgJHtuYW1lfWAsIGxlbmd0aCk7XG4vLyAgICAgc2hpcC5ib2FyZExvY2F0aW9uID0gbG9jYXRpb247XG4vLyAgICAgcmV0dXJuIHNoaXA7XG4vLyB9O1xuXG5leHBvcnQgY29uc3QgZ2FtZUJvYXJkID0gKCgpID0+IHtcblxuICAgIGNvbnN0IGNyZWF0ZVNoaXBBdExvY2F0aW9uID0gKG5hbWUsIGxlbmd0aCwgbG9jYXRpb24pID0+IHtcbiAgICAgICAgY29uc3Qgc2hpcCA9IHNoaXBGYWN0b3J5KGAke25hbWV9YCwgbGVuZ3RoKTtcbiAgICAgICAgc2hpcC5ib2FyZExvY2F0aW9uID0gbG9jYXRpb247XG4gICAgICAgIHJldHVybiBzaGlwO1xuICAgIH07XG5cbiAgICBjb25zdCBjcmVhdGVQbGF5ZXJTaGlwID0gKG5hbWUsIGxlbmd0aCwgbG9jYXRpb24pID0+IHtcbiAgICAgICAgY29uc3Qgc2hpcCA9IHNoaXBGYWN0b3J5KGAke25hbWV9YCwgbGVuZ3RoKTtcbiAgICAgICAgc2hpcC5ib2FyZExvY2F0aW9uID0gbG9jYXRpb247XG4gICAgICAgIHBsYXllcnMucGxheWVyLnNoaXBzLnB1c2goc2hpcCk7XG4gICAgfTtcblxuICAgIGNvbnN0IHBsYWNlID0gKGJvYXROYW1lLCBwbGF5ZXJOYW1lLCBsZXR0ZXJTdGFydCwgbGV0dGVyRW5kLCBudW1iZXJTdGFydCwgbnVtYmVyRW5kKSA9PiB7XG4gICAgICAgIGlmIChsZXR0ZXJTdGFydCA9PSBsZXR0ZXJFbmQpe1xuICAgICAgICAgICAgbGV0IGxlbmd0aCA9IG51bWJlckVuZCArIDEgLSBudW1iZXJTdGFydDtcbiAgICAgICAgICAgIGNvbnN0IHBvc2l0aW9uID0gW107XG4gICAgICAgICAgICBpZihgJHtwbGF5ZXJOYW1lfWAgPT0gJ3BsYXllcicpe1xuICAgICAgICAgICAgICAgIGZvcihsZXQgaSA9IG51bWJlclN0YXJ0IC0gMTsgaSA8IG51bWJlckVuZDsgaSsrKXtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb24ucHVzaChsZXR0ZXJTdGFydCArIGAke2kgKyAxfWAgKyBgUGxheWVyYCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBwbGF5ZXJzLnBsYXllci5zaGlwcy5wdXNoKGNyZWF0ZVNoaXBBdExvY2F0aW9uKGJvYXROYW1lLCBsZW5ndGgsIHBvc2l0aW9uKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBsYXllcnMucGxheWVyLnNoaXBzO1xuICAgICAgICAgICAgfSBlbHNlIGlmKGAke3BsYXllck5hbWV9YCA9PSAnY29tcHV0ZXInKXtcbiAgICAgICAgICAgICAgICBmb3IobGV0IGkgPSBudW1iZXJTdGFydCAtIDE7IGkgPCBudW1iZXJFbmQ7IGkrKyl7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uLnB1c2gobGV0dGVyU3RhcnQgKyBgJHtpICsgMX1gICsgYENvbXB1dGVyYCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBwbGF5ZXJzLmNvbXB1dGVyLnNoaXBzLnB1c2goY3JlYXRlU2hpcEF0TG9jYXRpb24oYm9hdE5hbWUsIGxlbmd0aCwgcG9zaXRpb24pKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSBpZiAobnVtYmVyU3RhcnQgPT0gbnVtYmVyRW5kKXtcbiAgICAgICAgICAgIGxldCBmaXJzdE51bWJlciA9IGxldHRlclN0YXJ0LmNoYXJDb2RlQXQoMCkgLSA5NztcbiAgICAgICAgICAgIGxldCBsYXN0TnVtYmVyID0gbGV0dGVyRW5kLmNoYXJDb2RlQXQoMCkgLSA5NztcbiAgICAgICAgICAgIGxldCBsZW5ndGggPSBsYXN0TnVtYmVyICsgMSAtIGZpcnN0TnVtYmVyO1xuICAgICAgICAgICAgY29uc3QgcG9zaXRpb24gPSBbXTtcbiAgICAgICAgICAgIGlmKGAke3BsYXllck5hbWV9YCA9PSAncGxheWVyJyl7XG4gICAgICAgICAgICAgICAgZm9yKGxldCBpID0gZmlyc3ROdW1iZXI7IGkgPCBsYXN0TnVtYmVyICsgMTsgaSsrKXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IG5ld0xldHRlciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoaSArIDk3KTtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb24ucHVzaChgJHtuZXdMZXR0ZXJ9YCArIG51bWJlclN0YXJ0ICsgJ1BsYXllcicpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgcGxheWVycy5wbGF5ZXIuc2hpcHMucHVzaChjcmVhdGVTaGlwQXRMb2NhdGlvbihib2F0TmFtZSwgbGVuZ3RoLCBwb3NpdGlvbikpO1xuICAgICAgICAgICAgfSBlbHNlIGlmKGAke3BsYXllck5hbWV9YCA9PSAnY29tcHV0ZXInKXtcbiAgICAgICAgICAgICAgICBmb3IobGV0IGkgPSBmaXJzdE51bWJlcjsgaSA8IGxhc3ROdW1iZXIgKyAxOyBpKyspe1xuICAgICAgICAgICAgICAgICAgICBsZXQgbmV3TGV0dGVyID0gU3RyaW5nLmZyb21DaGFyQ29kZShpICsgOTcpO1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbi5wdXNoKGAke25ld0xldHRlcn1gICsgbnVtYmVyU3RhcnQgKyAnQ29tcHV0ZXInKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHBsYXllcnMuY29tcHV0ZXIuc2hpcHMucHVzaChjcmVhdGVTaGlwQXRMb2NhdGlvbihib2F0TmFtZSwgbGVuZ3RoLCBwb3NpdGlvbikpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgY29uc3QgcmVjZWl2ZUF0dGFjayA9IChsb2NhdGlvbikgPT4ge1xuICAgICAgICBpZihsb2NhdGlvbi5pbmNsdWRlcygnUGxheWVyJykgPT0gdHJ1ZSl7XG4gICAgICAgICAgICBsZXQgc2hpcCA9IHBsYXllcnMucGxheWVyLnNoaXBzLmZpbmQob2JqZWN0ID0+IG9iamVjdC5ib2FyZExvY2F0aW9uLmluY2x1ZGVzKGAke2xvY2F0aW9ufWApKTtcbiAgICAgICAgICAgIGlmKHNoaXAgIT09IHVuZGVmaW5lZCl7XG4gICAgICAgICAgICAgICAgLy9hdHRhY2sgc2hpcFxuICAgICAgICAgICAgICAgIHNoaXAuaGl0KCk7XG4gICAgICAgICAgICAgICAgc2hpcC5pc1N1bmsoKTtcbiAgICAgICAgICAgICAgICBwbGF5ZXJzLnBsYXllci5jaGVja0Zvckxvc3MoKTtcbiAgICAgICAgICAgICAgICBwbGF5ZXJzLmNvbXB1dGVyLmhpdHMucHVzaChgJHtsb2NhdGlvbn1gKTtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHtsb2NhdGlvbn1gKS5jbGFzc05hbWUgPSAnY2VsbEhpdCc7XG4gICAgICAgICAgICB9IGVsc2UgaWYoc2hpcCA9PSB1bmRlZmluZWQpe1xuICAgICAgICAgICAgICAgIC8vbWlzcyBzaGlwXG4gICAgICAgICAgICAgICAgcGxheWVycy5jb21wdXRlci5taXNzZXMucHVzaChgJHtsb2NhdGlvbn1gKTtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHtsb2NhdGlvbn1gKS5jbGFzc05hbWUgPSAnY2VsbE1pc3MnO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIGlmKGxvY2F0aW9uLmluY2x1ZGVzKCdDb21wdXRlcicpID09IHRydWUpe1xuICAgICAgICAgICAgbGV0IHNoaXAgPSBwbGF5ZXJzLmNvbXB1dGVyLnNoaXBzLmZpbmQob2JqZWN0ID0+IG9iamVjdC5ib2FyZExvY2F0aW9uLmluY2x1ZGVzKGAke2xvY2F0aW9ufWApKTtcbiAgICAgICAgICAgIGlmKHNoaXAgIT09IHVuZGVmaW5lZCl7XG4gICAgICAgICAgICAgICAgLy9hdHRhY2sgc2hpcFxuICAgICAgICAgICAgICAgIHNoaXAuaGl0KCk7XG4gICAgICAgICAgICAgICAgc2hpcC5pc1N1bmsoKTtcbiAgICAgICAgICAgICAgICBwbGF5ZXJzLmNvbXB1dGVyLmNoZWNrRm9yTG9zcygpO1xuICAgICAgICAgICAgICAgIHNoaXAuc3Vua0NlbGxzKCk7XG4gICAgICAgICAgICAgICAgcGxheWVycy5jb21wdXRlci5oaXRzLnB1c2goYCR7bG9jYXRpb259YCk7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYCR7bG9jYXRpb259YCkuY2xhc3NOYW1lID0gJ2NlbGxIaXQnO1xuICAgICAgICAgICAgfSBlbHNlIGlmKHNoaXAgPT0gdW5kZWZpbmVkKXtcbiAgICAgICAgICAgICAgICAvL21pc3Mgc2hpcFxuICAgICAgICAgICAgICAgIHBsYXllcnMuY29tcHV0ZXIubWlzc2VzLnB1c2goYCR7bG9jYXRpb259YCk7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYCR7bG9jYXRpb259YCkuY2xhc3NOYW1lID0gJ2NlbGxNaXNzJztcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIHJldHVybiB7Y3JlYXRlU2hpcEF0TG9jYXRpb24sIGNyZWF0ZVBsYXllclNoaXAsIHBsYWNlLCByZWNlaXZlQXR0YWNrfTtcblxufSkoKTsiLCJpbXBvcnQgeyBnYW1lQm9hcmQgfSBmcm9tIFwiLi9nYW1lQm9hcmRcIjtcbmltcG9ydCB7IHBsYXllcnMgfSBmcm9tIFwiLi9wbGF5ZXJzXCI7XG5cbmV4cG9ydCBjb25zdCBjb21wdXRlclR1cm4gPSAoKCkgPT57XG5cbiAgICBsZXQgbWlzc2VzID0gcGxheWVycy5wbGF5ZXIubWlzc2VzO1xuICAgIGxldCBoaXRzID0gcGxheWVycy5wbGF5ZXIuaGl0cztcbiAgICBsZXQgcGxheWVkTG9jYXRpb25zID0gbWlzc2VzLmNvbmNhdChoaXRzKTtcblxuICAgIGxldCBsb2NhdGlvbjtcblxuICAgIGZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKCl7XG4gICAgICAgIGxldCBsZXR0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSArIDk3KTtcbiAgICAgICAgbGV0IG51bWJlciA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSArIDE7XG4gICAgICAgIGxvY2F0aW9uID0gbGV0dGVyICsgbnVtYmVyICsgJ1BsYXllcic7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGF0dGFja1BsYXllcigpe1xuICAgICAgICBjcmVhdGVMb2NhdGlvbigpO1xuICAgICAgICBsZXQgc3VjY2Vzc0NvbmRpdGlvbiA9IHBsYXllZExvY2F0aW9ucy5maW5kKGUgPT4gZSA9PSBsb2NhdGlvbik7XG5cbiAgICAgICAgaWYoc3VjY2Vzc0NvbmRpdGlvbiAhPT0gdW5kZWZpbmVkKXtcbiAgICAgICAgICAgIC8vIHRyeSBhZ2FpblxuICAgICAgICAgICAgYXR0YWNrUGxheWVyKCk7XG4gICAgICAgIH0gZWxzZSBpZihzdWNjZXNzQ29uZGl0aW9uID09IHVuZGVmaW5lZCl7XG4gICAgICAgICAgICAvLyBhdHRhY2tcbiAgICAgICAgICAgIGdhbWVCb2FyZC5yZWNlaXZlQXR0YWNrKGxvY2F0aW9uKTtcbiAgICAgICAgfTtcblxuICAgIH07XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBhdHRhY2tQbGF5ZXIsXG4gICAgfTtcbn0pKCk7IiwiZXhwb3J0IGNvbnN0IHNlbGVjdE5laWdoYm9ycyA9IChsZW5ndGgpID0+IHtcbiAgICBsZXQgZGlyZWN0aW9uID0gJ2hvcml6b250YWwnO1xuICAgIGNvbnN0IHJvdGF0ZUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb3RhdGVCdXR0b24nKTtcbiAgICByb3RhdGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIGlmKGRpcmVjdGlvbiA9PSAnaG9yaXpvbnRhbCcpe1xuICAgICAgICAgICAgZGlyZWN0aW9uID0gJ3ZlcnRpY2FsJztcbiAgICAgICAgfSBlbHNlIGlmKGRpcmVjdGlvbiA9PSAndmVydGljYWwnKXtcbiAgICAgICAgICAgIGRpcmVjdGlvbiA9ICdob3Jpem9udGFsJztcbiAgICAgICAgfTtcbiAgICB9KTtcblxuICAgIGNvbnN0IHBsYWNlbWVudEJvYXJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BsYWNlbWVudEJvYXJkJyk7XG5cbiAgICBwbGFjZW1lbnRCb2FyZC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCBjaGFuZ2VUb1NoaXApO1xuICAgIHBsYWNlbWVudEJvYXJkLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3V0JywgY2hhbmdlVG9QbGFjZW1lbnQpO1xuICAgIHBsYWNlbWVudEJvYXJkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICBwbGFjZW1lbnRCb2FyZC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCBjaGFuZ2VUb1NoaXApO1xuICAgICAgICBwbGFjZW1lbnRCb2FyZC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW91dCcsIGNoYW5nZVRvUGxhY2VtZW50KTtcbiAgICB9KTtcblxuICAgIGZ1bmN0aW9uIGNoYW5nZVRvU2hpcChlKXtcbiAgICAgICAgaWYoZS50YXJnZXQuY2xhc3NOYW1lID09ICdwbGFjZW1lbnRDZWxsJyl7XG4gICAgICAgICAgICBsZXQgY2VsbElkID0gZS50YXJnZXQuaWQ7XG4gICAgICAgICAgICBsZXQgbGV0dGVyID0gY2VsbElkLmNoYXJBdCgwKTtcbiAgICAgICAgICAgIGxldCBudW1iZXIgPSBOdW1iZXIoY2VsbElkLnNsaWNlKDEpKTtcbiAgICAgICAgICAgIGlmKGRpcmVjdGlvbiA9PSAndmVydGljYWwnKXtcbiAgICAgICAgICAgICAgICBpZihsZW5ndGggPT0gNSAmJiBudW1iZXIgPj0gNyl7XG4gICAgICAgICAgICAgICAgICAgIG51bWJlciA9IDY7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZihsZW5ndGggPT0gNCAmJiBudW1iZXIgPj0gOCl7XG4gICAgICAgICAgICAgICAgICAgIG51bWJlciA9IDc7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZihsZW5ndGggPT0gMyAmJiBudW1iZXIgPj0gOSl7XG4gICAgICAgICAgICAgICAgICAgIG51bWJlciA9IDg7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZihudW1iZXIgPT0gMTAgJiYgbGVuZ3RoID09IDIpe1xuICAgICAgICAgICAgICAgICAgICBudW1iZXIgPSA5O1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IG5ld051bWJlciA9IG51bWJlciArIGk7XG4gICAgICAgICAgICAgICAgICAgIGxldCBuZXdDb29yZGluYXRlID0gYCR7bGV0dGVyICsgbmV3TnVtYmVyfWA7XG4gICAgICAgICAgICAgICAgICAgIGlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGAke25ld0Nvb3JkaW5hdGV9YCkuY2xhc3NOYW1lICE9PSAndGFrZW5DZWxsJyl7XG4gICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHtuZXdDb29yZGluYXRlfWApLmNsYXNzTmFtZSA9ICdzaGlwQ2VsbCc7XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0gZWxzZSBpZihkaXJlY3Rpb24gPT0gJ2hvcml6b250YWwnKXtcbiAgICAgICAgICAgICAgICBpZigoTnVtYmVyKGxldHRlci5jaGFyQ29kZUF0KDApIC0gOTYpKSA+PSA3ICYmIGxlbmd0aCA9PSA1KXtcbiAgICAgICAgICAgICAgICAgICAgbGV0dGVyID0gJ2YnO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgaWYoKE51bWJlcihsZXR0ZXIuY2hhckNvZGVBdCgwKSAtIDk2KSkgPj0gOCAmJiBsZW5ndGggPT0gNCl7XG4gICAgICAgICAgICAgICAgICAgIGxldHRlciA9ICdnJztcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGlmKChOdW1iZXIobGV0dGVyLmNoYXJDb2RlQXQoMCkgLSA5NikpID49IDkgJiYgbGVuZ3RoID09IDMpe1xuICAgICAgICAgICAgICAgICAgICBsZXR0ZXIgPSAnaCc7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZigoTnVtYmVyKGxldHRlci5jaGFyQ29kZUF0KDApIC0gOTYpKSA9PSAxMCAmJiBsZW5ndGggPT0gNDIpe1xuICAgICAgICAgICAgICAgICAgICBsZXR0ZXIgPSAnaSc7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgICAgICAgICBsZXQgbmV3TGV0dGVyID0gU3RyaW5nLmZyb21DaGFyQ29kZShsZXR0ZXIuY2hhckNvZGVBdCgwKSArIGkpO1xuICAgICAgICAgICAgICAgICAgICBsZXQgbmV3Q29vcmRpbmF0ZSA9IGAke25ld0xldHRlciArIG51bWJlcn1gO1xuICAgICAgICAgICAgICAgICAgICBpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHtuZXdDb29yZGluYXRlfWApLmNsYXNzTmFtZSAhPT0gJ3Rha2VuQ2VsbCcpe1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYCR7bmV3Q29vcmRpbmF0ZX1gKS5jbGFzc05hbWUgPSAnc2hpcENlbGwnO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9O1xuICAgICAgICB9O1xuICAgIH07XG4gICAgZnVuY3Rpb24gY2hhbmdlVG9QbGFjZW1lbnQoZSl7XG4gICAgICAgIGlmKGUudGFyZ2V0LmNsYXNzTmFtZSA9PSAnc2hpcENlbGwnKXtcbiAgICAgICAgICAgIGxldCBjZWxsSWQgPSBlLnRhcmdldC5pZDtcbiAgICAgICAgICAgIGxldCBsZXR0ZXIgPSBjZWxsSWQuY2hhckF0KDApO1xuICAgICAgICAgICAgbGV0IG51bWJlciA9IE51bWJlcihjZWxsSWQuc2xpY2UoMSkpO1xuICAgICAgICAgICAgaWYoZGlyZWN0aW9uID09ICd2ZXJ0aWNhbCcpe1xuICAgICAgICAgICAgICAgIGlmKGxlbmd0aCA9PSA1ICYmIG51bWJlciA+PSA3KXtcbiAgICAgICAgICAgICAgICAgICAgbnVtYmVyID0gNjtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGlmKGxlbmd0aCA9PSA0ICYmIG51bWJlciA+PSA4KXtcbiAgICAgICAgICAgICAgICAgICAgbnVtYmVyID0gNztcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGlmKGxlbmd0aCA9PSAzICYmIG51bWJlciA+PSA5KXtcbiAgICAgICAgICAgICAgICAgICAgbnVtYmVyID0gODtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGlmKG51bWJlciA9PSAxMCAmJiBsZW5ndGggPT0gMil7XG4gICAgICAgICAgICAgICAgICAgIG51bWJlciA9IDk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgICAgICAgICBsZXQgbmV3TnVtYmVyID0gbnVtYmVyICsgaTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IG5ld0Nvb3JkaW5hdGUgPSBgJHtsZXR0ZXIgKyBuZXdOdW1iZXJ9YDtcbiAgICAgICAgICAgICAgICAgICAgaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYCR7bmV3Q29vcmRpbmF0ZX1gKS5jbGFzc05hbWUgIT09ICd0YWtlbkNlbGwnKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGAke25ld0Nvb3JkaW5hdGV9YCkuY2xhc3NOYW1lID0gJ3BsYWNlbWVudENlbGwnO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9IGVsc2UgaWYoZGlyZWN0aW9uID09ICdob3Jpem9udGFsJyl7XG4gICAgICAgICAgICAgICAgaWYoKE51bWJlcihsZXR0ZXIuY2hhckNvZGVBdCgwKSAtIDk2KSkgPj0gNyAmJiBsZW5ndGggPT0gNSl7XG4gICAgICAgICAgICAgICAgICAgIGxldHRlciA9ICdmJztcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGlmKChOdW1iZXIobGV0dGVyLmNoYXJDb2RlQXQoMCkgLSA5NikpID49IDggJiYgbGVuZ3RoID09IDQpe1xuICAgICAgICAgICAgICAgICAgICBsZXR0ZXIgPSAnZyc7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZigoTnVtYmVyKGxldHRlci5jaGFyQ29kZUF0KDApIC0gOTYpKSA+PSA5ICYmIGxlbmd0aCA9PSAzKXtcbiAgICAgICAgICAgICAgICAgICAgbGV0dGVyID0gJ2gnO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgaWYoKE51bWJlcihsZXR0ZXIuY2hhckNvZGVBdCgwKSAtIDk2KSkgPT0gMTAgJiYgbGVuZ3RoID09IDQyKXtcbiAgICAgICAgICAgICAgICAgICAgbGV0dGVyID0gJ2knO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IG5ld0xldHRlciA9IFN0cmluZy5mcm9tQ2hhckNvZGUobGV0dGVyLmNoYXJDb2RlQXQoMCkgKyBpKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IG5ld0Nvb3JkaW5hdGUgPSBgJHtuZXdMZXR0ZXIgKyBudW1iZXJ9YDtcbiAgICAgICAgICAgICAgICAgICAgaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYCR7bmV3Q29vcmRpbmF0ZX1gKS5jbGFzc05hbWUgIT09ICd0YWtlbkNlbGwnKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGAke25ld0Nvb3JkaW5hdGV9YCkuY2xhc3NOYW1lID0gJ3BsYWNlbWVudENlbGwnO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9O1xuICAgICAgICB9O1xuICAgIH07XG5cbiAgICByZXR1cm57Y2hhbmdlVG9QbGFjZW1lbnQsIGNoYW5nZVRvU2hpcH07XG59OyIsImltcG9ydCBhZGRFbGVtZW50IGZyb20gXCIuL2FkZEVsZW1lbnRcIjtcbmltcG9ydCBhZGRUZXh0IGZyb20gXCIuL2FkZFRleHRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlQm9hcmQoKXtcblxuICAgIGZvcihsZXQgaSA9IDA7IGkgPCAxMjE7IGkrKyl7XG4gICAgICAgIGlmKGkgPCAxKXtcbiAgICAgICAgICAgIGFkZEVsZW1lbnQoJ3AnLCAndGV4dENlbGwnLCAnJywgJ3BsYXllckJvYXJkJyk7XG4gICAgICAgICAgICBhZGRFbGVtZW50KCdwJywgJ3RleHRDZWxsJywgJycsICdjb21wdXRlckJvYXJkJyk7XG4gICAgICAgIH0gZWxzZSBpZihpIDwgMTEpe1xuICAgICAgICAgICAgbGV0IGxldHRlciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoaSArIDk2KTtcbiAgICAgICAgICAgIGxldCB1cHBlckNhc2VMZXR0ZXIgPSBsZXR0ZXIudG9VcHBlckNhc2UoKTtcbiAgICAgICAgICAgIGFkZEVsZW1lbnQoJ3AnLCAndGV4dENlbGwnLCBgJHtsZXR0ZXIgKyAxfWAsICdwbGF5ZXJCb2FyZCcpO1xuICAgICAgICAgICAgYWRkVGV4dChgJHtsZXR0ZXIgKyAxfWAsIGAke3VwcGVyQ2FzZUxldHRlcn1gKTtcbiAgICAgICAgICAgIGFkZEVsZW1lbnQoJ3AnLCAndGV4dENlbGwnLCBgJHtsZXR0ZXIgKyAyfWAsICdjb21wdXRlckJvYXJkJyk7XG4gICAgICAgICAgICBhZGRUZXh0KGAke2xldHRlciArIDJ9YCwgYCR7dXBwZXJDYXNlTGV0dGVyfWApO1xuICAgICAgICB9IGVsc2UgaWYoaSA+IDEwKXtcbiAgICAgICAgICAgIGlmKGkgJSAxMSA9PSAwKXtcbiAgICAgICAgICAgICAgICBsZXQgbnVtYmVyID0gaSAvIDExO1xuICAgICAgICAgICAgICAgIGFkZEVsZW1lbnQoJ3AnLCAndGV4dENlbGwnLCBgJHtudW1iZXIgKyAncGxheWVyJ31gLCAncGxheWVyQm9hcmQnKTtcbiAgICAgICAgICAgICAgICBhZGRUZXh0KGAke251bWJlciArICdwbGF5ZXInfWAsIGAke251bWJlcn1gKTtcbiAgICAgICAgICAgICAgICBhZGRFbGVtZW50KCdwJywgJ3RleHRDZWxsJywgYCR7bnVtYmVyICsgJ2NvbXB1dGVyJ31gLCAnY29tcHV0ZXJCb2FyZCcpO1xuICAgICAgICAgICAgICAgIGFkZFRleHQoYCR7bnVtYmVyICsgJ2NvbXB1dGVyJ31gLCBgJHtudW1iZXJ9YCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYoaSAlIDExICE9IDApe1xuICAgICAgICAgICAgICAgIGlmKGkgPCAyMil7XG4gICAgICAgICAgICAgICAgICAgIGxldCBsZXR0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGkgKyA4NSlcbiAgICAgICAgICAgICAgICAgICAgYWRkRWxlbWVudCgnZGl2JywgJ3BsYXllckNlbGwnLCBgJHtsZXR0ZXIgKyAxICsgJ1BsYXllcid9YCwgJ3BsYXllckJvYXJkJyk7XG4gICAgICAgICAgICAgICAgICAgIGFkZEVsZW1lbnQoJ2RpdicsICdjb21wdXRlckNlbGwnLCBgJHtsZXR0ZXIgKyAxICsgJ0NvbXB1dGVyJ31gLCAnY29tcHV0ZXJCb2FyZCcpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZihpIDwgMzMpe1xuICAgICAgICAgICAgICAgICAgICBsZXQgbGV0dGVyID0gU3RyaW5nLmZyb21DaGFyQ29kZShpICsgNzQpXG4gICAgICAgICAgICAgICAgICAgIGFkZEVsZW1lbnQoJ2RpdicsICdwbGF5ZXJDZWxsJywgYCR7bGV0dGVyICsgMiArICdQbGF5ZXInfWAsICdwbGF5ZXJCb2FyZCcpO1xuICAgICAgICAgICAgICAgICAgICBhZGRFbGVtZW50KCdkaXYnLCAnY29tcHV0ZXJDZWxsJywgYCR7bGV0dGVyICsgMiArICdDb21wdXRlcid9YCwgJ2NvbXB1dGVyQm9hcmQnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYoaSA8IDQ0KXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGxldHRlciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoaSArIDYzKVxuICAgICAgICAgICAgICAgICAgICBhZGRFbGVtZW50KCdkaXYnLCAncGxheWVyQ2VsbCcsIGAke2xldHRlciArIDMgKyAnUGxheWVyJ31gLCAncGxheWVyQm9hcmQnKTtcbiAgICAgICAgICAgICAgICAgICAgYWRkRWxlbWVudCgnZGl2JywgJ2NvbXB1dGVyQ2VsbCcsIGAke2xldHRlciArIDMgKyAnQ29tcHV0ZXInfWAsICdjb21wdXRlckJvYXJkJyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmKGkgPCA1NSl7XG4gICAgICAgICAgICAgICAgICAgIGxldCBsZXR0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGkgKyA1MilcbiAgICAgICAgICAgICAgICAgICAgYWRkRWxlbWVudCgnZGl2JywgJ3BsYXllckNlbGwnLCBgJHtsZXR0ZXIgKyA0ICsgJ1BsYXllcid9YCwgJ3BsYXllckJvYXJkJyk7XG4gICAgICAgICAgICAgICAgICAgIGFkZEVsZW1lbnQoJ2RpdicsICdjb21wdXRlckNlbGwnLCBgJHtsZXR0ZXIgKyA0ICsgJ0NvbXB1dGVyJ31gLCAnY29tcHV0ZXJCb2FyZCcpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZihpIDwgNjYpe1xuICAgICAgICAgICAgICAgICAgICBsZXQgbGV0dGVyID0gU3RyaW5nLmZyb21DaGFyQ29kZShpICsgNDEpXG4gICAgICAgICAgICAgICAgICAgIGFkZEVsZW1lbnQoJ2RpdicsICdwbGF5ZXJDZWxsJywgYCR7bGV0dGVyICsgNSArICdQbGF5ZXInfWAsICdwbGF5ZXJCb2FyZCcpO1xuICAgICAgICAgICAgICAgICAgICBhZGRFbGVtZW50KCdkaXYnLCAnY29tcHV0ZXJDZWxsJywgYCR7bGV0dGVyICsgNSArICdDb21wdXRlcid9YCwgJ2NvbXB1dGVyQm9hcmQnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYoaSA8IDc3KXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGxldHRlciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoaSArIDMwKVxuICAgICAgICAgICAgICAgICAgICBhZGRFbGVtZW50KCdkaXYnLCAncGxheWVyQ2VsbCcsIGAke2xldHRlciArIDYgKyAnUGxheWVyJ31gLCAncGxheWVyQm9hcmQnKTtcbiAgICAgICAgICAgICAgICAgICAgYWRkRWxlbWVudCgnZGl2JywgJ2NvbXB1dGVyQ2VsbCcsIGAke2xldHRlciArIDYgKyAnQ29tcHV0ZXInfWAsICdjb21wdXRlckJvYXJkJyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmKGkgPCA4OCl7XG4gICAgICAgICAgICAgICAgICAgIGxldCBsZXR0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGkgKyAxOSlcbiAgICAgICAgICAgICAgICAgICAgYWRkRWxlbWVudCgnZGl2JywgJ3BsYXllckNlbGwnLCBgJHtsZXR0ZXIgKyA3ICsgJ1BsYXllcid9YCwgJ3BsYXllckJvYXJkJyk7XG4gICAgICAgICAgICAgICAgICAgIGFkZEVsZW1lbnQoJ2RpdicsICdjb21wdXRlckNlbGwnLCBgJHtsZXR0ZXIgKyA3ICsgJ0NvbXB1dGVyJ31gLCAnY29tcHV0ZXJCb2FyZCcpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZihpIDwgOTkpe1xuICAgICAgICAgICAgICAgICAgICBsZXQgbGV0dGVyID0gU3RyaW5nLmZyb21DaGFyQ29kZShpICsgOClcbiAgICAgICAgICAgICAgICAgICAgYWRkRWxlbWVudCgnZGl2JywgJ3BsYXllckNlbGwnLCBgJHtsZXR0ZXIgKyA4ICsgJ1BsYXllcid9YCwgJ3BsYXllckJvYXJkJyk7XG4gICAgICAgICAgICAgICAgICAgIGFkZEVsZW1lbnQoJ2RpdicsICdjb21wdXRlckNlbGwnLCBgJHtsZXR0ZXIgKyA4ICsgJ0NvbXB1dGVyJ31gLCAnY29tcHV0ZXJCb2FyZCcpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZihpIDwgMTEwKXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGxldHRlciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoaSAtIDMpXG4gICAgICAgICAgICAgICAgICAgIGFkZEVsZW1lbnQoJ2RpdicsICdwbGF5ZXJDZWxsJywgYCR7bGV0dGVyICsgOSArICdQbGF5ZXInfWAsICdwbGF5ZXJCb2FyZCcpO1xuICAgICAgICAgICAgICAgICAgICBhZGRFbGVtZW50KCdkaXYnLCAnY29tcHV0ZXJDZWxsJywgYCR7bGV0dGVyICsgOSArICdDb21wdXRlcid9YCwgJ2NvbXB1dGVyQm9hcmQnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYoaSA8IDEyMSl7XG4gICAgICAgICAgICAgICAgICAgIGxldCBsZXR0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGkgLSAxNClcbiAgICAgICAgICAgICAgICAgICAgYWRkRWxlbWVudCgnZGl2JywgJ3BsYXllckNlbGwnLCBgJHtsZXR0ZXIgKyAxMCArICdQbGF5ZXInfWAsICdwbGF5ZXJCb2FyZCcpO1xuICAgICAgICAgICAgICAgICAgICBhZGRFbGVtZW50KCdkaXYnLCAnY29tcHV0ZXJDZWxsJywgYCR7bGV0dGVyICsgMTAgKyAnQ29tcHV0ZXInfWAsICdjb21wdXRlckJvYXJkJyk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgfTtcbn07IiwiaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgY3JlYXRlQm9hcmQgZnJvbSAnLi9jcmVhdGVCb2FyZCc7XG5pbXBvcnQgeyBnYW1lQm9hcmQgfSBmcm9tICcuL2dhbWVCb2FyZC5qcyc7XG5pbXBvcnQgeyBwbGF5ZXJzIH0gZnJvbSAnLi9wbGF5ZXJzLmpzJztcbmltcG9ydCB7IGNvbXB1dGVyVHVybiB9IGZyb20gJy4vY29tcHV0ZXJUdXJuJztcbmltcG9ydCBwbGF5ZXJTZXR1cCBmcm9tICcuL3BsYXllclNldHVwJztcbmltcG9ydCBjb21wdXRlclNldHVwIGZyb20gJy4vY29tcHV0ZXJTZXR1cCc7XG5cbmNyZWF0ZUJvYXJkKCk7XG5cbmxldCBjb21wdXRlckJvYXJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbXB1dGVyQm9hcmQnKTtcbmNvbXB1dGVyQm9hcmQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgIGlmKGUudGFyZ2V0LmNsYXNzTmFtZSA9PSAnY29tcHV0ZXJDZWxsJyl7XG4gICAgICAgIGxldCBsb2NhdGlvbiA9IGUudGFyZ2V0LmlkO1xuICAgICAgICBnYW1lQm9hcmQucmVjZWl2ZUF0dGFjayhsb2NhdGlvbik7XG5cbiAgICAgICAgbGV0IGNvbXB1dGVyTG9zc1N0YXR1cyA9IHBsYXllcnMuY29tcHV0ZXIubG9zdDtcbiAgICAgICAgaWYoY29tcHV0ZXJMb3NzU3RhdHVzID09IGZhbHNlKXtcbiAgICAgICAgICAgIGNvbXB1dGVyVHVybi5hdHRhY2tQbGF5ZXIoKTtcbiAgICAgICAgfTtcbiAgICB9O1xufSk7XG5cbnBsYXllclNldHVwKCk7XG5jb21wdXRlclNldHVwKCk7IiwiaW1wb3J0IGNyZWF0ZVBsYWNlbWVudEJvYXJkIGZyb20gXCIuL2NyZWF0ZVBsYWNlbWVudEJvYXJkXCI7XG5pbXBvcnQgcGxheWVyU2hpcENyZWF0aW9uIGZyb20gXCIuL3BsYXllclNoaXBDcmVhdGlvblwiO1xuXG4vLyBjYXJyaWVyIDVcbi8vIGJhdHRsZXNoaXAgNFxuLy8gZGVzdHJveWVyIDNcbi8vIHN1Ym1hcmluZSAzXG4vLyBwYXRyb2wgYm9hdCAyXG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGxheWVyU2V0dXAoKXtcbiAgICBjb25zdCBwb3B1cEJveCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwb3B1cCcpO1xuICAgIHBvcHVwQm94LnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7XG5cbiAgICBjcmVhdGVQbGFjZW1lbnRCb2FyZCgpO1xuICAgIGNvbnN0IHBsYWNlbWVudEJvYXJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BsYWNlbWVudEJvYXJkJyk7XG5cbiAgICBwbGF5ZXJTaGlwQ3JlYXRpb24oKTtcbn07IiwiaW1wb3J0IGFkZEVsZW1lbnQgZnJvbSBcIi4vYWRkRWxlbWVudFwiO1xuaW1wb3J0IGFkZFRleHQgZnJvbSBcIi4vYWRkVGV4dFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVQbGFjZW1lbnRCb2FyZCgpe1xuICAgIGZvcihsZXQgaSA9IDA7IGkgPCAxMjE7IGkrKyl7XG4gICAgICAgIGlmKGkgPCAxKXtcbiAgICAgICAgICAgIGFkZEVsZW1lbnQoJ3AnLCAndGV4dENlbGwnLCAnJywgJ3BsYWNlbWVudEJvYXJkJyk7XG4gICAgICAgIH0gZWxzZSBpZihpIDwgMTEpe1xuICAgICAgICAgICAgbGV0IGxldHRlciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoaSArIDk2KTtcbiAgICAgICAgICAgIGxldCB1cHBlckNhc2VMZXR0ZXIgPSBsZXR0ZXIudG9VcHBlckNhc2UoKTtcbiAgICAgICAgICAgIGFkZEVsZW1lbnQoJ3AnLCAndGV4dENlbGwnLCBgJHtsZXR0ZXJ9YCwgJ3BsYWNlbWVudEJvYXJkJyk7XG4gICAgICAgICAgICBhZGRUZXh0KGAke2xldHRlcn1gLCBgJHt1cHBlckNhc2VMZXR0ZXJ9YCk7XG4gICAgICAgIH0gZWxzZSBpZihpID4gMTApe1xuICAgICAgICAgICAgaWYoaSAlIDExID09IDApe1xuICAgICAgICAgICAgICAgIGxldCBudW1iZXIgPSBpIC8gMTE7XG4gICAgICAgICAgICAgICAgYWRkRWxlbWVudCgncCcsICd0ZXh0Q2VsbCcsIGAke251bWJlciArICdwbGFjZW1lbnQnfWAsICdwbGFjZW1lbnRCb2FyZCcpO1xuICAgICAgICAgICAgICAgIGFkZFRleHQoYCR7bnVtYmVyICsgJ3BsYWNlbWVudCd9YCwgYCR7bnVtYmVyfWApO1xuICAgICAgICAgICAgfSBlbHNlIGlmKGkgJSAxMSAhPSAwKXtcbiAgICAgICAgICAgICAgICBpZihpIDwgMjIpe1xuICAgICAgICAgICAgICAgICAgICBsZXQgbGV0dGVyID0gU3RyaW5nLmZyb21DaGFyQ29kZShpICsgODUpXG4gICAgICAgICAgICAgICAgICAgIGFkZEVsZW1lbnQoJ2RpdicsICdwbGFjZW1lbnRDZWxsJywgYCR7bGV0dGVyICsgMX1gLCAncGxhY2VtZW50Qm9hcmQnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYoaSA8IDMzKXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGxldHRlciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoaSArIDc0KVxuICAgICAgICAgICAgICAgICAgICBhZGRFbGVtZW50KCdkaXYnLCAncGxhY2VtZW50Q2VsbCcsIGAke2xldHRlciArIDJ9YCwgJ3BsYWNlbWVudEJvYXJkJyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmKGkgPCA0NCl7XG4gICAgICAgICAgICAgICAgICAgIGxldCBsZXR0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGkgKyA2MylcbiAgICAgICAgICAgICAgICAgICAgYWRkRWxlbWVudCgnZGl2JywgJ3BsYWNlbWVudENlbGwnLCBgJHtsZXR0ZXIgKyAzfWAsICdwbGFjZW1lbnRCb2FyZCcpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZihpIDwgNTUpe1xuICAgICAgICAgICAgICAgICAgICBsZXQgbGV0dGVyID0gU3RyaW5nLmZyb21DaGFyQ29kZShpICsgNTIpXG4gICAgICAgICAgICAgICAgICAgIGFkZEVsZW1lbnQoJ2RpdicsICdwbGFjZW1lbnRDZWxsJywgYCR7bGV0dGVyICsgNH1gLCAncGxhY2VtZW50Qm9hcmQnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYoaSA8IDY2KXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGxldHRlciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoaSArIDQxKVxuICAgICAgICAgICAgICAgICAgICBhZGRFbGVtZW50KCdkaXYnLCAncGxhY2VtZW50Q2VsbCcsIGAke2xldHRlciArIDV9YCwgJ3BsYWNlbWVudEJvYXJkJyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmKGkgPCA3Nyl7XG4gICAgICAgICAgICAgICAgICAgIGxldCBsZXR0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGkgKyAzMClcbiAgICAgICAgICAgICAgICAgICAgYWRkRWxlbWVudCgnZGl2JywgJ3BsYWNlbWVudENlbGwnLCBgJHtsZXR0ZXIgKyA2fWAsICdwbGFjZW1lbnRCb2FyZCcpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZihpIDwgODgpe1xuICAgICAgICAgICAgICAgICAgICBsZXQgbGV0dGVyID0gU3RyaW5nLmZyb21DaGFyQ29kZShpICsgMTkpXG4gICAgICAgICAgICAgICAgICAgIGFkZEVsZW1lbnQoJ2RpdicsICdwbGFjZW1lbnRDZWxsJywgYCR7bGV0dGVyICsgN31gLCAncGxhY2VtZW50Qm9hcmQnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYoaSA8IDk5KXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGxldHRlciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoaSArIDgpXG4gICAgICAgICAgICAgICAgICAgIGFkZEVsZW1lbnQoJ2RpdicsICdwbGFjZW1lbnRDZWxsJywgYCR7bGV0dGVyICsgOH1gLCAncGxhY2VtZW50Qm9hcmQnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYoaSA8IDExMCl7XG4gICAgICAgICAgICAgICAgICAgIGxldCBsZXR0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGkgLSAzKVxuICAgICAgICAgICAgICAgICAgICBhZGRFbGVtZW50KCdkaXYnLCAncGxhY2VtZW50Q2VsbCcsIGAke2xldHRlciArIDl9YCwgJ3BsYWNlbWVudEJvYXJkJyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmKGkgPCAxMjEpe1xuICAgICAgICAgICAgICAgICAgICBsZXQgbGV0dGVyID0gU3RyaW5nLmZyb21DaGFyQ29kZShpIC0gMTQpXG4gICAgICAgICAgICAgICAgICAgIGFkZEVsZW1lbnQoJ2RpdicsICdwbGFjZW1lbnRDZWxsJywgYCR7bGV0dGVyICsgMTB9YCwgJ3BsYWNlbWVudEJvYXJkJyk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgfTtcbn07IiwiaW1wb3J0IGNyZWF0ZVBsYWNlbWVudEJvYXJkIGZyb20gXCIuL2NyZWF0ZVBsYWNlbWVudEJvYXJkXCI7XG5pbXBvcnQgeyBzZWxlY3ROZWlnaGJvcnMgfSBmcm9tIFwiLi9zZWxlY3ROZWlnaGJvcnNcIjtcbmltcG9ydCB7IGdhbWVCb2FyZCB9IGZyb20gXCIuL2dhbWVCb2FyZFwiO1xuaW1wb3J0IHsgcGxheWVycyB9IGZyb20gXCIuL3BsYXllcnNcIjtcbmltcG9ydCBhZGRUZXh0IGZyb20gXCIuL2FkZFRleHRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGxheWVyU2hpcENyZWF0aW9uKCl7XG5cbiAgICBsZXQgdHVybiA9IDE7XG5cbiAgICBjb25zdCBwbGFjZW1lbnRCb2FyZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwbGFjZW1lbnRCb2FyZCcpO1xuICAgIHBsYWNlbWVudEJvYXJkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY3JlYXRlU2hpcCk7XG4gICAgcGxhY2VtZW50Qm9hcmQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgY2VsbExvb3ApO1xuXG4gICAgZnVuY3Rpb24gY3JlYXRlU2hpcCgpe1xuICAgICAgICBsZXQgYm9hcmRMb2NhdGlvbiA9IFtdO1xuICAgICAgICBsZXQgbG9jYXRpb25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNoaXBDZWxsJyk7XG4gICAgICAgIGxvY2F0aW9ucy5mb3JFYWNoKGUgPT4ge1xuICAgICAgICAgICAgYm9hcmRMb2NhdGlvbi5wdXNoKGAke2UuaWQgKyAnUGxheWVyJ31gKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmKCh0dXJuID09IDEgJiYgbG9jYXRpb25zLmxlbmd0aCAhPT0gNSkgfHxcbiAgICAgICAgICAgICh0dXJuID09IDIgJiYgbG9jYXRpb25zLmxlbmd0aCAhPT0gNCkgfHxcbiAgICAgICAgICAgICh0dXJuID09IDMgJiYgbG9jYXRpb25zLmxlbmd0aCAhPT0gMykgfHxcbiAgICAgICAgICAgICh0dXJuID09IDQgJiYgbG9jYXRpb25zLmxlbmd0aCAhPT0gMykgfHxcbiAgICAgICAgICAgICh0dXJuID09IDUgJiYgbG9jYXRpb25zLmxlbmd0aCAhPT0gMikpe1xuICAgICAgICAgICAgICAgIGxvY2F0aW9ucy5mb3JFYWNoKGUgPT4ge1xuICAgICAgICAgICAgICAgICAgICBlLmNsYXNzTmFtZSA9ICdwbGFjZW1lbnRDZWxsJztcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH07XG4gICAgICAgIGlmKHR1cm4gPT0gMSAmJiBsb2NhdGlvbnMubGVuZ3RoID09IDUpe1xuICAgICAgICAgICAgZ2FtZUJvYXJkLmNyZWF0ZVBsYXllclNoaXAoJ3BsYXllckNhcnJpZXInLCA1LCBib2FyZExvY2F0aW9uKTtcbiAgICAgICAgfSBlbHNlIGlmKHR1cm4gPT0gMiAmJiBsb2NhdGlvbnMubGVuZ3RoID09IDQpe1xuICAgICAgICAgICAgZ2FtZUJvYXJkLmNyZWF0ZVBsYXllclNoaXAoJ3BsYXllckJhdHRsZXNoaXAnLCA0LCBib2FyZExvY2F0aW9uKTtcbiAgICAgICAgfSBlbHNlIGlmKHR1cm4gPT0gMyAmJiBsb2NhdGlvbnMubGVuZ3RoID09IDMpe1xuICAgICAgICAgICAgZ2FtZUJvYXJkLmNyZWF0ZVBsYXllclNoaXAoJ3BsYXllckRlc3Ryb3llcicsIDMsIGJvYXJkTG9jYXRpb24pO1xuICAgICAgICB9IGVsc2UgaWYodHVybiA9PSA0ICYmIGxvY2F0aW9ucy5sZW5ndGggPT0gMyl7XG4gICAgICAgICAgICBnYW1lQm9hcmQuY3JlYXRlUGxheWVyU2hpcCgncGxheWVyU3VibWFyaW5lJywgMywgYm9hcmRMb2NhdGlvbik7XG4gICAgICAgIH0gZWxzZSBpZih0dXJuID09IDUgJiYgbG9jYXRpb25zLmxlbmd0aCA9PSAyKXtcbiAgICAgICAgICAgIGdhbWVCb2FyZC5jcmVhdGVQbGF5ZXJTaGlwKCdwbGF5ZXJQYXRyb2xCb2F0JywgMiwgYm9hcmRMb2NhdGlvbik7XG4gICAgICAgICAgICBjb25zdCBwb3B1cEJveCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwb3B1cCcpO1xuICAgICAgICAgICAgcG9wdXBCb3guc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICAgIGRpc3BsYXlTaGlwcygpO1xuICAgICAgICB9O1xuICAgICAgICBsb2NhdGlvbnMuZm9yRWFjaChlID0+IHtcbiAgICAgICAgICAgIGUuY2xhc3NOYW1lID0gJ3Rha2VuQ2VsbCc7XG4gICAgICAgIH0pO1xuICAgICAgICB0dXJuKys7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBjZWxsTG9vcCgpe1xuICAgICAgICBpZih0dXJuID09IDEpe1xuICAgICAgICAgICAgc2VsZWN0TmVpZ2hib3JzKDUpO1xuICAgICAgICB9IGVsc2UgaWYodHVybiA9PSAyKXtcbiAgICAgICAgICAgIGFkZFRleHQoJ3BvcHVwVGV4dCcsICdQTEFDRSBZT1VSIEJBVFRMRVNISVAnKTtcbiAgICAgICAgICAgIHNlbGVjdE5laWdoYm9ycyg0KTtcbiAgICAgICAgfSBlbHNlIGlmKHR1cm4gPT0gMyl7XG4gICAgICAgICAgICBhZGRUZXh0KCdwb3B1cFRleHQnLCAnUExBQ0UgWU9VUiBERVNUUk9ZRVInKTtcbiAgICAgICAgICAgIHNlbGVjdE5laWdoYm9ycygzKTtcbiAgICAgICAgfSBlbHNlIGlmKHR1cm4gPT0gNCl7XG4gICAgICAgICAgICBhZGRUZXh0KCdwb3B1cFRleHQnLCAnUExBQ0UgWU9VUiBTVUJNQVJJTkUnKTtcbiAgICAgICAgICAgIHNlbGVjdE5laWdoYm9ycygzKTtcbiAgICAgICAgfSBlbHNlIGlmKHR1cm4gPT0gNSl7XG4gICAgICAgICAgICBhZGRUZXh0KCdwb3B1cFRleHQnLCAnUExBQ0UgWU9VUiBQQVRST0wgQk9BVCcpO1xuICAgICAgICAgICAgc2VsZWN0TmVpZ2hib3JzKDIpO1xuICAgICAgICB9O1xuICAgIH07XG4gICAgZnVuY3Rpb24gZGlzcGxheVNoaXBzKCl7XG4gICAgICAgIGxldCBzaGlwcyA9IHBsYXllcnMucGxheWVyLnNoaXBzO1xuICAgICAgICBsZXQgc2hpcExvY2F0aW9ucyA9IFtdO1xuICAgICAgICBzaGlwcy5mb3JFYWNoKGUgPT4ge1xuICAgICAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGUuYm9hcmRMb2NhdGlvbi5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgc2hpcExvY2F0aW9ucy5wdXNoKGUuYm9hcmRMb2NhdGlvbltpXSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICAgICAgc2hpcExvY2F0aW9ucy5mb3JFYWNoKGUgPT4ge1xuICAgICAgICAgICAgbGV0IGNlbGwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHtlfWApO1xuICAgICAgICAgICAgY2VsbC5jbGFzc05hbWUgPSAncGxheWVyU2hpcENlbGwnO1xuICAgICAgICB9KTtcbiAgICB9O1xufTtcbiIsImltcG9ydCB7IGdhbWVCb2FyZCB9IGZyb20gXCIuL2dhbWVCb2FyZFwiO1xuaW1wb3J0IHsgY29udmVydGVyIH0gZnJvbSBcIi4vY29udmVydExldHRlcnNBbmROdW1iZXJzXCI7XG5pbXBvcnQgeyBwbGF5ZXJzIH0gZnJvbSBcIi4vcGxheWVyc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb21wdXRlclNldHVwKCl7XG5cbiAgICBnYW1lQm9hcmQucGxhY2UoJ2NvbXB1dGVyQ2FycmllcicsICdjb21wdXRlcicsICdhJywgJ2EnLCAxLCA1KTtcbiAgICBnYW1lQm9hcmQucGxhY2UoJ2NvbXB1dGVyQmF0dGxlc2hpcCcsICdjb21wdXRlcicsICdiJywgJ2UnLCAxLCAxKTtcbiAgICBnYW1lQm9hcmQucGxhY2UoJ2NvbXB1dGVyRGVzdHJveWVyJywgJ2NvbXB1dGVyJywgJ2cnLCAnaScsIDYsIDYpO1xuICAgIGdhbWVCb2FyZC5wbGFjZSgnY29tcHV0ZXJTdWJtYXJpbmUnLCAnY29tcHV0ZXInLCAnZycsICdpJywgNywgNyk7XG4gICAgZ2FtZUJvYXJkLnBsYWNlKCdjb21wdXRlclBhdHJvbEJvYXQnLCAnY29tcHV0ZXInLCAnYScsICdiJywgMTAsIDEwKTtcblxuICAgIC8vIGdlbmVyYXRlU2hpcCg1LCAnY29tcHV0ZXJDYXJyaWVyJyk7XG4gICAgLy8gZ2VuZXJhdGVTaGlwKDQsICdjb21wdXRlckJhdHRsZXNoaXAnKTtcbiAgICAvLyBnZW5lcmF0ZVNoaXAoMywgJ2NvbXB1dGVyRGVzdHJveWVyJyk7XG4gICAgLy8gZ2VuZXJhdGVTaGlwKDMsICdjb21wdXRlclN1Ym1hcmluZScpO1xuICAgIC8vIGdlbmVyYXRlU2hpcCgyLCAnY29tcHV0ZXJQYXRyb2xCb2F0Jyk7XG5cbiAgICBmdW5jdGlvbiBnZW5lcmF0ZVNoaXAobGVuZ3RoLCBuYW1lKXtcbiAgICAgICAgaW5uZXJHZW5lcmF0ZVNoaXAobGVuZ3RoLCBuYW1lKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gaW5uZXJHZW5lcmF0ZVNoaXAobGVuZ3RoLCBuYW1lKXtcbiAgICAgICAgbGV0IGRpcmVjdGlvbiA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDIpO1xuICAgICAgICBpZihkaXJlY3Rpb24gPT0gMCl7XG4gICAgICAgICAgICAvLyBob3Jpem9udGFsXG4gICAgICAgICAgICBsZXQgbnVtYmVyID0gcmFuZG9tTnVtYmVyKDEwKTtcbiAgICAgICAgICAgIGxldCBzdGFydGluZ0xldHRlciA9IHJhbmRvbU51bWJlcigxMCk7XG4gICAgICAgICAgICBpZihzdGFydGluZ0xldHRlciArIGxlbmd0aCA+IDEwKXtcbiAgICAgICAgICAgICAgICBzdGFydGluZ0xldHRlciA9IHN0YXJ0aW5nTGV0dGVyIC0gbGVuZ3RoO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGxldCBlbmRpbmdMZXR0ZXIgPSBzdGFydGluZ0xldHRlciArIGxlbmd0aCAtIDE7XG4gICAgICAgICAgICBzdGFydGluZ0xldHRlciA9IGNvbnZlcnRlci5udW1iZXJUb0xldHRlcihzdGFydGluZ0xldHRlcik7XG4gICAgICAgICAgICBlbmRpbmdMZXR0ZXIgPSBjb252ZXJ0ZXIubnVtYmVyVG9MZXR0ZXIoZW5kaW5nTGV0dGVyKTtcbiAgICAgICAgICAgIGxldCBwb3NpdGlvbiA9IGNyZWF0ZVBvc2l0aW9uKGRpcmVjdGlvbiwgbnVtYmVyLCBudW1iZXIsIHN0YXJ0aW5nTGV0dGVyLCBlbmRpbmdMZXR0ZXIpO1xuICAgICAgICAgICAgbGV0IHN0YXR1cyA9IGNoZWNrUG9zaXRpb25UYWtlbihwb3NpdGlvbik7XG4gICAgICAgICAgICBpZihzdGF0dXMgPT0gJ25vdCB0YWtlbicpe1xuICAgICAgICAgICAgICAgIC8vIG1ha2Ugc2hpcFxuICAgICAgICAgICAgICAgIGdhbWVCb2FyZC5wbGFjZShuYW1lLCAnY29tcHV0ZXInLCBzdGFydGluZ0xldHRlciwgZW5kaW5nTGV0dGVyLCBudW1iZXIsIG51bWJlcik7XG4gICAgICAgICAgICB9IGVsc2UgaWYoc3RhdHVzID09ICd0YWtlbicpe1xuICAgICAgICAgICAgICAgIC8vIHJldHJ5XG4gICAgICAgICAgICAgICAgZ2VuZXJhdGVTaGlwKGxlbmd0aCwgbmFtZSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2UgaWYoZGlyZWN0aW9uID09IDEpe1xuICAgICAgICAgICAgLy8gdmVydGljYWxcbiAgICAgICAgICAgIGxldCBsZXR0ZXIgPSBjb252ZXJ0ZXIubnVtYmVyVG9MZXR0ZXIocmFuZG9tTnVtYmVyKDEwKSAtIDEpO1xuICAgICAgICAgICAgbGV0IHN0YXJ0aW5nTnVtYmVyID0gcmFuZG9tTnVtYmVyKDEwKTtcbiAgICAgICAgICAgIGlmKHN0YXJ0aW5nTnVtYmVyICsgbGVuZ3RoID4gMTApe1xuICAgICAgICAgICAgICAgIHN0YXJ0aW5nTnVtYmVyID0gc3RhcnRpbmdOdW1iZXIgLSBsZW5ndGg7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgbGV0IGVuZGluZ051bWJlciA9IHN0YXJ0aW5nTnVtYmVyICsgbGVuZ3RoIC0gMTtcbiAgICAgICAgICAgIGxldCBwb3NpdGlvbiA9IGNyZWF0ZVBvc2l0aW9uKGRpcmVjdGlvbiwgc3RhcnRpbmdOdW1iZXIsIGVuZGluZ051bWJlciwgbGV0dGVyLCBsZXR0ZXIpO1xuICAgICAgICAgICAgbGV0IHN0YXR1cyA9IGNoZWNrUG9zaXRpb25UYWtlbihwb3NpdGlvbik7XG4gICAgICAgICAgICBpZihzdGF0dXMgPT0gJ25vdCB0YWtlbicpe1xuICAgICAgICAgICAgICAgIC8vIG1ha2Ugc2hpcFxuICAgICAgICAgICAgICAgIGdhbWVCb2FyZC5wbGFjZShuYW1lLCAnY29tcHV0ZXInLCBsZXR0ZXIsIGxldHRlciwgc3RhcnRpbmdOdW1iZXIsIGVuZGluZ051bWJlcik7XG4gICAgICAgICAgICB9IGVsc2UgaWYoc3RhdHVzID09ICd0YWtlbicpe1xuICAgICAgICAgICAgICAgIC8vIHJldHJ5XG4gICAgICAgICAgICAgICAgZ2VuZXJhdGVTaGlwKGxlbmd0aCwgbmFtZSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGNyZWF0ZVBvc2l0aW9uKGRpcmVjdGlvbiwgbnVtYmVyU3RhcnQsIG51bWJlckVuZCwgbGV0dGVyU3RhcnQsIGxldHRlckVuZCl7XG4gICAgICAgIGlmIChkaXJlY3Rpb24gPT0gMSl7XG4gICAgICAgICAgICBjb25zdCBwb3NpdGlvbiA9IFtdO1xuICAgICAgICAgICAgZm9yKGxldCBpID0gbnVtYmVyU3RhcnQgLSAxOyBpIDwgbnVtYmVyRW5kOyBpKyspe1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uLnB1c2gobGV0dGVyU3RhcnQgKyBgJHtpICsgMX1gICsgYENvbXB1dGVyYCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHBvc2l0aW9uO1xuICAgICAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PSAwKXtcbiAgICAgICAgICAgIGxldCBmaXJzdE51bWJlciA9IGxldHRlclN0YXJ0LmNoYXJDb2RlQXQoMCkgLSA5NztcbiAgICAgICAgICAgIGxldCBsYXN0TnVtYmVyID0gbGV0dGVyRW5kLmNoYXJDb2RlQXQoMCkgLSA5NztcbiAgICAgICAgICAgIGNvbnN0IHBvc2l0aW9uID0gW107XG4gICAgICAgICAgICBmb3IobGV0IGkgPSBmaXJzdE51bWJlcjsgaSA8IGxhc3ROdW1iZXIgKyAxOyBpKyspe1xuICAgICAgICAgICAgICAgIGxldCBuZXdMZXR0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGkgKyA5Nyk7XG4gICAgICAgICAgICAgICAgcG9zaXRpb24ucHVzaChgJHtuZXdMZXR0ZXJ9YCArIG51bWJlclN0YXJ0ICsgJ0NvbXB1dGVyJyk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHBvc2l0aW9uO1xuICAgICAgICB9O1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBjaGVja1Bvc2l0aW9uVGFrZW4ocG9zaXRpb24pe1xuICAgICAgICBsZXQgc3RhdHVzID0gJ25vdCB0YWtlbic7XG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBwb3NpdGlvbi5sZW5ndGggKyAxOyBpKyspe1xuICAgICAgICAgICAgbGV0IGNlbGwgPSBwb3NpdGlvbltpXTtcbiAgICAgICAgICAgIGxldCBzaGlwID0gcGxheWVycy5jb21wdXRlci5zaGlwcy5maW5kKG9iamVjdCA9PiBvYmplY3QuYm9hcmRMb2NhdGlvbi5pbmNsdWRlcyhgJHtjZWxsfWApKTtcbiAgICAgICAgICAgIGlmKHNoaXAgIT09IHVuZGVmaW5lZCl7XG4gICAgICAgICAgICAgICAgLy9zcG90IHRha2VuXG4gICAgICAgICAgICAgICAgc3RhdHVzID0gJ3Rha2VuJztcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RhdHVzO1xuICAgICAgICAgICAgfSBlbHNlIGlmKHNoaXAgPT0gdW5kZWZpbmVkKXtcbiAgICAgICAgICAgICAgICAvL3Nwb3Qgbm90IHRha2VuXG4gICAgICAgICAgICAgICAgc3RhdHVzID0gJ25vdCB0YWtlbic7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gc3RhdHVzO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiByYW5kb21OdW1iZXIoYW1vdW50KXtcbiAgICAgICAgbGV0IG51bWJlciA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGFtb3VudCkgKyAxO1xuICAgICAgICByZXR1cm4gbnVtYmVyO1xuICAgIH07XG59OyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fIiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJuIiwiZ2V0dGVyIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJocmVmIiwibmMiLCJhZGRFbGVtZW50IiwiZWxlbWVudFR5cGUiLCJlbGVtZW50Q2xhc3MiLCJlbGVtZW50SUQiLCJhZGRUb0lEIiwibmV3RWxlbWVudCIsImNsYXNzTmFtZSIsImdldEVsZW1lbnRCeUlkIiwiYWRkVGV4dCIsInRleHQiLCJpbm5lckhUTUwiLCJwbGF5ZXJzIiwiZ2FtZU92ZXIiLCJwbGF5ZXIiLCJsb3N0Iiwic2hpcHMiLCJtaXNzZXMiLCJoaXRzIiwiY2hlY2tGb3JMb3NzIiwibG9zc0NvbmRpdGlvbiIsImZpbHRlciIsInNoaXAiLCJzdW5rIiwiZGlzcGxheSIsImNvbXB1dGVyIiwiY29uc29sZSIsImxvZyIsInNoaXBGYWN0b3J5IiwibmFtZSIsImJvYXJkTG9jYXRpb24iLCJoaXROdW1iZXIiLCJoaXQiLCJpc1N1bmsiLCJzdW5rQ2VsbHMiLCJzaGlwQ2VsbHMiLCJnYW1lQm9hcmQiLCJjcmVhdGVTaGlwQXRMb2NhdGlvbiIsImNyZWF0ZVBsYXllclNoaXAiLCJwbGFjZSIsImJvYXROYW1lIiwicGxheWVyTmFtZSIsImxldHRlclN0YXJ0IiwibGV0dGVyRW5kIiwibnVtYmVyU3RhcnQiLCJudW1iZXJFbmQiLCJwb3NpdGlvbiIsImZpcnN0TnVtYmVyIiwiY2hhckNvZGVBdCIsImxhc3ROdW1iZXIiLCJuZXdMZXR0ZXIiLCJmcm9tQ2hhckNvZGUiLCJyZWNlaXZlQXR0YWNrIiwiaW5jbHVkZXMiLCJmaW5kIiwib2JqZWN0IiwiY29tcHV0ZXJUdXJuIiwicGxheWVkTG9jYXRpb25zIiwiYXR0YWNrUGxheWVyIiwibGV0dGVyIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibnVtYmVyIiwiY3JlYXRlTG9jYXRpb24iLCJzdWNjZXNzQ29uZGl0aW9uIiwic2VsZWN0TmVpZ2hib3JzIiwiZGlyZWN0aW9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsInBsYWNlbWVudEJvYXJkIiwiY2hhbmdlVG9TaGlwIiwiY2VsbElkIiwiY2hhckF0IiwiTnVtYmVyIiwibmV3Q29vcmRpbmF0ZSIsImNoYW5nZVRvUGxhY2VtZW50IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInVwcGVyQ2FzZUxldHRlciIsInRvVXBwZXJDYXNlIiwiY3JlYXRlQm9hcmQiLCJjcmVhdGVQbGFjZW1lbnRCb2FyZCIsInR1cm4iLCJsb2NhdGlvbnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsInNoaXBMb2NhdGlvbnMiLCJkaXNwbGF5U2hpcHMiLCJwbGF5ZXJTaGlwQ3JlYXRpb24iXSwic291cmNlUm9vdCI6IiJ9